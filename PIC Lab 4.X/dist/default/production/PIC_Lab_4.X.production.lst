

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Dec 10 20:45:44 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F688
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	text10,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     	;# 
    20  0001                     	;# 
    21  0002                     	;# 
    22  0003                     	;# 
    23  0004                     	;# 
    24  0005                     	;# 
    25  0007                     	;# 
    26  000A                     	;# 
    27  000B                     	;# 
    28  000C                     	;# 
    29  000E                     	;# 
    30  000E                     	;# 
    31  000F                     	;# 
    32  0010                     	;# 
    33  0011                     	;# 
    34  0012                     	;# 
    35  0013                     	;# 
    36  0014                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0017                     	;# 
    40  0018                     	;# 
    41  0019                     	;# 
    42  001A                     	;# 
    43  001E                     	;# 
    44  001F                     	;# 
    45  0081                     	;# 
    46  0085                     	;# 
    47  0087                     	;# 
    48  008C                     	;# 
    49  008E                     	;# 
    50  008F                     	;# 
    51  0090                     	;# 
    52  0091                     	;# 
    53  0095                     	;# 
    54  0095                     	;# 
    55  0096                     	;# 
    56  0096                     	;# 
    57  0097                     	;# 
    58  0098                     	;# 
    59  0099                     	;# 
    60  009A                     	;# 
    61  009A                     	;# 
    62  009B                     	;# 
    63  009C                     	;# 
    64  009D                     	;# 
    65  009E                     	;# 
    66  009F                     	;# 
    67  001F                     _ADCON0	set	31
    68  001E                     _ADRESH	set	30
    69  0019                     _CMCON0	set	25
    70  0007                     _PORTC	set	7
    71  00F9                     _GO	set	249
    72  003C                     _RC4	set	60
    73  003D                     _RC5	set	61
    74  009F                     _ADCON1	set	159
    75  009E                     _ADRESL	set	158
    76  0091                     _ANSEL	set	145
    77  042A                     _TRISA2	set	1066
    78  0438                     _TRISC0	set	1080
    79  0439                     _TRISC1	set	1081
    80  043A                     _TRISC2	set	1082
    81  043B                     _TRISC3	set	1083
    82  043C                     _TRISC4	set	1084
    83  043D                     _TRISC5	set	1085
    84                           
    85                           ; #config settings
    86  0000                     
    87                           	psect	cinit
    88  07FD                     start_initialization:	
    89  07FD                     __initialization:	
    90  07FD                     end_of_initialization:	
    91                           ;End of C runtime variable initialization code
    92                           
    93  07FD                     __end_of__initialization:	
    94  07FD  0183               	clrf	3
    95  07FE  118A  2F9B         	ljmp	_main	;jump to C main() function
    96                           
    97                           	psect	cstackCOMMON
    98  0070                     __pcstackCOMMON:	
    99  0070                     ?_debug_write:	
   100  0070                     ??_debug_write:	
   101                           ; 0 bytes @ 0x0
   102                           
   103  0070                     ?_wait_while_strobe_high:	
   104                           ; 0 bytes @ 0x0
   105                           
   106  0070                     ??_wait_while_strobe_high:	
   107                           ; 0 bytes @ 0x0
   108                           
   109  0070                     ?_wait_while_strobe_low:	
   110                           ; 0 bytes @ 0x0
   111                           
   112  0070                     ??_wait_while_strobe_low:	
   113                           ; 0 bytes @ 0x0
   114                           
   115  0070                     ?_init:	
   116                           ; 0 bytes @ 0x0
   117                           
   118  0070                     ??_init:	
   119                           ; 0 bytes @ 0x0
   120                           
   121  0070                     ?_set_read:	
   122                           ; 0 bytes @ 0x0
   123                           
   124  0070                     ??_set_read:	
   125                           ; 0 bytes @ 0x0
   126                           
   127  0070                     ?_set_write:	
   128                           ; 0 bytes @ 0x0
   129                           
   130  0070                     ??_set_write:	
   131                           ; 0 bytes @ 0x0
   132                           
   133  0070                     ?_write_msg:	
   134                           ; 0 bytes @ 0x0
   135                           
   136  0070                     ?_read_adc:	
   137                           ; 0 bytes @ 0x0
   138                           
   139  0070                     ??_read_adc:	
   140                           ; 0 bytes @ 0x0
   141                           
   142  0070                     ?_main:	
   143                           ; 0 bytes @ 0x0
   144                           
   145  0070                     ?_read_msg:	
   146                           ; 0 bytes @ 0x0
   147                           
   148  0070                     ?_vread:	
   149                           ; 1 bytes @ 0x0
   150                           
   151                           
   152                           ; 2 bytes @ 0x0
   153  0070                     	ds	1
   154  0071                     ??_write_msg:	
   155  0071                     write_msg@msg:	
   156                           ; 0 bytes @ 0x1
   157                           
   158  0071                     debug_write@msg:	
   159                           ; 1 bytes @ 0x1
   160                           
   161                           
   162                           ; 1 bytes @ 0x1
   163  0071                     	ds	1
   164  0072                     ??_vread:	
   165  0072                     debug_write@i:	
   166                           ; 0 bytes @ 0x2
   167                           
   168                           
   169                           ; 2 bytes @ 0x2
   170  0072                     	ds	2
   171  0074                     ??_read_msg:	
   172                           
   173                           ; 0 bytes @ 0x4
   174  0074                     	ds	1
   175  0075                     read_msg@msg:	
   176  0075                     vread@rval:	
   177                           ; 1 bytes @ 0x5
   178                           
   179                           
   180                           ; 2 bytes @ 0x5
   181  0075                     	ds	2
   182  0077                     ??_main:	
   183                           
   184                           ; 0 bytes @ 0x7
   185  0077                     	ds	3
   186                           
   187                           	psect	cstackBANK0
   188  0020                     __pcstackBANK0:	
   189  0020                     main@cmd:	
   190                           
   191                           ; 1 bytes @ 0x0
   192  0020                     	ds	1
   193  0021                     main@chunk1:	
   194                           
   195                           ; 1 bytes @ 0x1
   196  0021                     	ds	1
   197  0022                     main@chunk2:	
   198                           
   199                           ; 1 bytes @ 0x2
   200  0022                     	ds	1
   201  0023                     main@chunk3:	
   202                           
   203                           ; 1 bytes @ 0x3
   204  0023                     	ds	1
   205  0024                     main@data:	
   206                           
   207                           ; 2 bytes @ 0x4
   208  0024                     	ds	2
   209                           
   210                           	psect	maintext
   211  079B                     __pmaintext:	
   212 ;;
   213 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   214 ;;
   215 ;; *************** function _main *****************
   216 ;; Defined at:
   217 ;;		line 230 in file "assignment4.c"
   218 ;; Parameters:    Size  Location     Type
   219 ;;		None
   220 ;; Auto vars:     Size  Location     Type
   221 ;;  chunk3          1    3[BANK0 ] unsigned char 
   222 ;;  chunk2          1    2[BANK0 ] unsigned char 
   223 ;;  chunk1          1    1[BANK0 ] unsigned char 
   224 ;;  data            2    4[BANK0 ] int 
   225 ;;  cmd             1    0[BANK0 ] unsigned char 
   226 ;; Return value:  Size  Location     Type
   227 ;;		None               void
   228 ;; Registers used:
   229 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   230 ;; Tracked objects:
   231 ;;		On entry : B00/0
   232 ;;		On exit  : 0/0
   233 ;;		Unchanged: 0/0
   234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   235 ;;      Params:         0       0       0       0
   236 ;;      Locals:         0       6       0       0
   237 ;;      Temps:          3       0       0       0
   238 ;;      Totals:         3       6       0       0
   239 ;;Total ram usage:        9 bytes
   240 ;; Hardware stack levels required when called:    2
   241 ;; This function calls:
   242 ;;		_debug_write
   243 ;;		_init
   244 ;;		_read_msg
   245 ;;		_set_read
   246 ;;		_vread
   247 ;;		_write_msg
   248 ;; This function is called by:
   249 ;;		Startup code after reset
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253                           
   254                           ;psect for function _main
   255  079B                     _main:	
   256                           
   257                           ;assignment4.c: 232: init();
   258                           
   259                           ;incstack = 0
   260                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   261  079B  118A  26D8  118A   	fcall	_init
   262                           
   263                           ;assignment4.c: 233: set_read();
   264  079E  118A  26A8  118A   	fcall	_set_read
   265  07A1                     l788:	
   266                           ;assignment4.c: 238: while(1){
   267                           
   268                           
   269                           ;assignment4.c: 239: debug_write(0x7);
   270  07A1  3007               	movlw	7
   271  07A2  118A  2747  118A   	fcall	_debug_write
   272  07A5  2FA1               	goto	l788
   273  07A6                     l794:	
   274                           ;assignment4.c: 252: case(0x00):
   275                           
   276                           ;assignment4.c: 251: switch(cmd){
   277                           
   278                           ;assignment4.c: 240: }
   279                           ;assignment4.c: 242: char cmd;
   280                           ;assignment4.c: 243: int data;
   281                           ;assignment4.c: 244: RC5 = 0;
   282                           
   283                           
   284                           ;assignment4.c: 253: init();
   285  07A6  118A  26D8  118A   	fcall	_init
   286  07A9                     l796:	
   287                           ;assignment4.c: 257: case(0x01):
   288                           
   289                           ;assignment4.c: 256: break;
   290                           
   291                           ;assignment4.c: 255: write_msg(0x0E);
   292                           
   293  07A9  2FDD               	goto	L2
   294  07AA                     l798:	
   295                           ;assignment4.c: 261: case(0x02):
   296                           
   297                           ;assignment4.c: 260: break;
   298                           
   299                           ;assignment4.c: 259: write_msg(0x0E);
   300                           
   301                           
   302                           ;assignment4.c: 263: data = vread();
   303  07AA  118A  2723  118A   	fcall	_vread
   304  07AD  0871               	movf	?_vread+1,w
   305  07AE  1283               	bcf	3,5	;RP0=0, select bank0
   306  07AF  1303               	bcf	3,6	;RP1=0, select bank0
   307  07B0  00A5               	movwf	main@data+1
   308  07B1  0870               	movf	?_vread,w
   309  07B2  00A4               	movwf	main@data
   310                           
   311                           ;assignment4.c: 264: char chunk1, chunk2, chunk3;
   312                           ;assignment4.c: 265: chunk1 = (char) (data & 0x000f);
   313  07B3  0824               	movf	main@data,w
   314  07B4  390F               	andlw	15
   315  07B5  00F7               	movwf	??_main
   316  07B6  0877               	movf	??_main,w
   317  07B7  00A1               	movwf	main@chunk1
   318                           
   319                           ;assignment4.c: 266: chunk2 = (char) ((data >> 4) & 0x000f);
   320  07B8  0825               	movf	main@data+1,w
   321  07B9  00F8               	movwf	??_main+1
   322  07BA  0824               	movf	main@data,w
   323  07BB  00F7               	movwf	??_main
   324  07BC  3004               	movlw	4
   325  07BD  00FF               	movwf	127
   326  07BE                     u225:	
   327  07BE  0D78               	rlf	??_main+1,w
   328  07BF  0CF8               	rrf	??_main+1,f
   329  07C0  0CF7               	rrf	??_main,f
   330  07C1  0BFF               	decfsz	127,f
   331  07C2  2FBE               	goto	u225
   332  07C3  0877               	movf	??_main,w
   333  07C4  390F               	andlw	15
   334  07C5  00F9               	movwf	??_main+2
   335  07C6  0879               	movf	??_main+2,w
   336  07C7  00A2               	movwf	main@chunk2
   337                           
   338                           ;assignment4.c: 267: chunk3 = (char) ((data >> 8) & 0x000f);
   339  07C8  0825               	movf	main@data+1,w
   340  07C9  390F               	andlw	15
   341  07CA  00F7               	movwf	??_main
   342  07CB  0877               	movf	??_main,w
   343  07CC  00A3               	movwf	main@chunk3
   344                           
   345                           ;assignment4.c: 268: write_msg(chunk3);
   346  07CD  0823               	movf	main@chunk3,w
   347  07CE  118A  26EB  118A   	fcall	_write_msg
   348                           
   349                           ;assignment4.c: 269: write_msg(chunk2);
   350  07D1  1283               	bcf	3,5	;RP0=0, select bank0
   351  07D2  1303               	bcf	3,6	;RP1=0, select bank0
   352  07D3  0822               	movf	main@chunk2,w
   353  07D4  118A  26EB  118A   	fcall	_write_msg
   354                           
   355                           ;assignment4.c: 270: write_msg(chunk1);
   356  07D7  1283               	bcf	3,5	;RP0=0, select bank0
   357  07D8  1303               	bcf	3,6	;RP1=0, select bank0
   358  07D9  0821               	movf	main@chunk1,w
   359  07DA  118A  26EB  118A   	fcall	_write_msg
   360  07DD                     L2:	
   361                           
   362                           ;assignment4.c: 272: write_msg(0x0E);
   363  07DD  300E               	movlw	14
   364  07DE  2FE0               	goto	L1
   365  07DF                     l814:	
   366                           ;assignment4.c: 274: default:
   367                           
   368                           ;assignment4.c: 273: break;
   369                           
   370                           
   371                           ;assignment4.c: 275: write_msg(0x0F);
   372  07DF  300F               	movlw	15
   373  07E0                     L1:	
   374  07E0  118A  26EB  118A   	fcall	_write_msg
   375  07E3                     l95:	
   376                           ;assignment4.c: 245: while(1){
   377                           
   378                           ;assignment4.c: 277: }
   379                           
   380                           ;assignment4.c: 276: break;
   381                           
   382                           
   383                           ;assignment4.c: 248: RC5 = 1;
   384  07E3  1283               	bcf	3,5	;RP0=0, select bank0
   385  07E4  1303               	bcf	3,6	;RP1=0, select bank0
   386  07E5  1687               	bsf	7,5	;volatile
   387                           
   388                           ;assignment4.c: 249: cmd = read_msg();
   389  07E6  118A  2705  118A   	fcall	_read_msg
   390  07E9  00F7               	movwf	??_main
   391  07EA  0877               	movf	??_main,w
   392  07EB  1283               	bcf	3,5	;RP0=0, select bank0
   393  07EC  1303               	bcf	3,6	;RP1=0, select bank0
   394  07ED  00A0               	movwf	main@cmd
   395                           
   396                           ;assignment4.c: 250: RC5 = 0;
   397  07EE  1287               	bcf	7,5	;volatile
   398  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   399  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   400  07F1  0820               	movf	main@cmd,w
   401                           
   402                           ; Switch size 1, requested type "space"
   403                           ; Number of cases is 3, Range of values is 0 to 2
   404                           ; switch strategies available:
   405                           ; Name         Instructions Cycles
   406                           ; simple_byte           10     6 (average)
   407                           ; direct_byte           13     7 (fixed)
   408                           ; jumptable            260     6 (fixed)
   409                           ;	Chosen strategy is simple_byte
   410  07F2  3A00               	xorlw	0	; case 0
   411  07F3  1903               	skipnz
   412  07F4  2FA6               	goto	l794
   413  07F5  3A01               	xorlw	1	; case 1
   414  07F6  1903               	skipnz
   415  07F7  2FA9               	goto	l796
   416  07F8  3A03               	xorlw	3	; case 2
   417  07F9  1903               	skipnz
   418  07FA  2FAA               	goto	l798
   419  07FB  2FDF               	goto	l814
   420  07FC  2FE3               	goto	l95
   421  07FD                     __end_of_main:	
   422                           
   423                           	psect	text1
   424  06EB                     __ptext1:	
   425 ;; *************** function _write_msg *****************
   426 ;; Defined at:
   427 ;;		line 134 in file "assignment4.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;  msg             1    wreg     unsigned char 
   430 ;; Auto vars:     Size  Location     Type
   431 ;;  msg             1    1[COMMON] unsigned char 
   432 ;; Return value:  Size  Location     Type
   433 ;;		None               void
   434 ;; Registers used:
   435 ;;		wreg, status,2, status,0, pclath, cstack
   436 ;; Tracked objects:
   437 ;;		On entry : 0/0
   438 ;;		On exit  : 0/0
   439 ;;		Unchanged: 0/0
   440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   441 ;;      Params:         0       0       0       0
   442 ;;      Locals:         1       0       0       0
   443 ;;      Temps:          0       0       0       0
   444 ;;      Totals:         1       0       0       0
   445 ;;Total ram usage:        1 bytes
   446 ;; Hardware stack levels used:    1
   447 ;; Hardware stack levels required when called:    1
   448 ;; This function calls:
   449 ;;		_set_read
   450 ;;		_set_write
   451 ;;		_wait_while_strobe_high
   452 ;;		_wait_while_strobe_low
   453 ;; This function is called by:
   454 ;;		_main
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458                           
   459                           ;psect for function _write_msg
   460  06EB                     _write_msg:	
   461                           
   462                           ;incstack = 0
   463                           ; Regs used in _write_msg: [wreg+status,2+status,0+pclath+cstack]
   464                           ;write_msg@msg stored from wreg
   465  06EB  00F1               	movwf	write_msg@msg
   466                           
   467                           ;assignment4.c: 137: wait_while_strobe_low();
   468  06EC  118A  26C8  118A   	fcall	_wait_while_strobe_low
   469                           
   470                           ;assignment4.c: 140: wait_while_strobe_high();
   471  06EF  118A  26B8  118A   	fcall	_wait_while_strobe_high
   472                           
   473                           ;assignment4.c: 143: PORTC = msg;
   474  06F2  0871               	movf	write_msg@msg,w
   475  06F3  1283               	bcf	3,5	;RP0=0, select bank0
   476  06F4  1303               	bcf	3,6	;RP1=0, select bank0
   477  06F5  0087               	movwf	7	;volatile
   478                           
   479                           ;assignment4.c: 144: set_write();
   480  06F6  118A  26B0  118A   	fcall	_set_write
   481                           
   482                           ;assignment4.c: 145: wait_while_strobe_low();
   483  06F9  118A  26C8  118A   	fcall	_wait_while_strobe_low
   484                           
   485                           ;assignment4.c: 148: wait_while_strobe_high();
   486  06FC  118A  26B8  118A   	fcall	_wait_while_strobe_high
   487                           
   488                           ;assignment4.c: 151: PORTC = 0x0;
   489  06FF  1283               	bcf	3,5	;RP0=0, select bank0
   490  0700  1303               	bcf	3,6	;RP1=0, select bank0
   491  0701  0187               	clrf	7	;volatile
   492                           
   493                           ;assignment4.c: 152: set_read();
   494  0702  118A  26A8         	fcall	_set_read
   495  0704  0008               	return
   496  0705                     __end_of_write_msg:	
   497                           
   498                           	psect	text2
   499  06B0                     __ptext2:	
   500 ;; *************** function _set_write *****************
   501 ;; Defined at:
   502 ;;		line 116 in file "assignment4.c"
   503 ;; Parameters:    Size  Location     Type
   504 ;;		None
   505 ;; Auto vars:     Size  Location     Type
   506 ;;		None
   507 ;; Return value:  Size  Location     Type
   508 ;;		None               void
   509 ;; Registers used:
   510 ;;		None
   511 ;; Tracked objects:
   512 ;;		On entry : 0/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   516 ;;      Params:         0       0       0       0
   517 ;;      Locals:         0       0       0       0
   518 ;;      Temps:          0       0       0       0
   519 ;;      Totals:         0       0       0       0
   520 ;;Total ram usage:        0 bytes
   521 ;; Hardware stack levels used:    1
   522 ;; This function calls:
   523 ;;		Nothing
   524 ;; This function is called by:
   525 ;;		_write_msg
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529                           
   530                           ;psect for function _set_write
   531  06B0                     _set_write:	
   532                           
   533                           ;assignment4.c: 117: TRISC0 = 0;
   534                           
   535                           ;incstack = 0
   536                           ; Regs used in _set_write: []
   537  06B0  1683               	bsf	3,5	;RP0=1, select bank1
   538  06B1  1303               	bcf	3,6	;RP1=0, select bank1
   539  06B2  1007               	bcf	7,0	;volatile
   540                           
   541                           ;assignment4.c: 118: TRISC1 = 0;
   542  06B3  1087               	bcf	7,1	;volatile
   543                           
   544                           ;assignment4.c: 119: TRISC2 = 0;
   545  06B4  1107               	bcf	7,2	;volatile
   546                           
   547                           ;assignment4.c: 120: TRISC3 = 0;
   548  06B5  1187               	bcf	7,3	;volatile
   549                           
   550                           ;assignment4.c: 121: TRISC4 = 1;
   551  06B6  1607               	bsf	7,4	;volatile
   552  06B7  0008               	return
   553  06B8                     __end_of_set_write:	
   554                           
   555                           	psect	text3
   556  0723                     __ptext3:	
   557 ;; *************** function _vread *****************
   558 ;; Defined at:
   559 ;;		line 220 in file "assignment4.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;  rval            2    5[COMMON] int 
   564 ;; Return value:  Size  Location     Type
   565 ;;                  2    0[COMMON] int 
   566 ;; Registers used:
   567 ;;		wreg, status,2, status,0, pclath, cstack
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   573 ;;      Params:         2       0       0       0
   574 ;;      Locals:         2       0       0       0
   575 ;;      Temps:          3       0       0       0
   576 ;;      Totals:         7       0       0       0
   577 ;;Total ram usage:        7 bytes
   578 ;; Hardware stack levels used:    1
   579 ;; Hardware stack levels required when called:    1
   580 ;; This function calls:
   581 ;;		_read_adc
   582 ;; This function is called by:
   583 ;;		_main
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587                           
   588                           ;psect for function _vread
   589  0723                     _vread:	
   590                           
   591                           ;assignment4.c: 221: read_adc();
   592                           
   593                           ;incstack = 0
   594                           ; Regs used in _vread: [wreg+status,2+status,0+pclath+cstack]
   595  0723  118A  26A2  118A   	fcall	_read_adc
   596                           
   597                           ;assignment4.c: 223: int rval = ADRESH;
   598  0726  1283               	bcf	3,5	;RP0=0, select bank0
   599  0727  1303               	bcf	3,6	;RP1=0, select bank0
   600  0728  081E               	movf	30,w	;volatile
   601  0729  00F2               	movwf	??_vread
   602  072A  01F3               	clrf	??_vread+1
   603  072B  0872               	movf	??_vread,w
   604  072C  00F5               	movwf	vread@rval
   605  072D  0873               	movf	??_vread+1,w
   606  072E  00F6               	movwf	vread@rval+1
   607                           
   608                           ;assignment4.c: 225: rval += (ADRESL>>6);
   609  072F  1683               	bsf	3,5	;RP0=1, select bank1
   610  0730  1303               	bcf	3,6	;RP1=0, select bank1
   611  0731  081E               	movf	30,w	;volatile
   612  0732  00F2               	movwf	??_vread
   613  0733  3006               	movlw	6
   614  0734                     u215:	
   615  0734  1003               	clrc
   616  0735  0CF2               	rrf	??_vread,f
   617  0736  3EFF               	addlw	-1
   618  0737  1D03               	skipz
   619  0738  2F34               	goto	u215
   620  0739  0872               	movf	??_vread,w
   621  073A  00F3               	movwf	??_vread+1
   622  073B  01F4               	clrf	??_vread+2
   623  073C  0873               	movf	??_vread+1,w
   624  073D  07F5               	addwf	vread@rval,f
   625  073E  1803               	skipnc
   626  073F  0AF6               	incf	vread@rval+1,f
   627  0740  0874               	movf	??_vread+2,w
   628  0741  07F6               	addwf	vread@rval+1,f
   629                           
   630                           ;assignment4.c: 226: return rval;
   631  0742  0876               	movf	vread@rval+1,w
   632  0743  00F1               	movwf	?_vread+1
   633  0744  0875               	movf	vread@rval,w
   634  0745  00F0               	movwf	?_vread
   635  0746  0008               	return
   636  0747                     __end_of_vread:	
   637                           
   638                           	psect	text4
   639  06A2                     __ptext4:	
   640 ;; *************** function _read_adc *****************
   641 ;; Defined at:
   642 ;;		line 209 in file "assignment4.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;		None
   645 ;; Auto vars:     Size  Location     Type
   646 ;;		None
   647 ;; Return value:  Size  Location     Type
   648 ;;		None               void
   649 ;; Registers used:
   650 ;;		None
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   656 ;;      Params:         0       0       0       0
   657 ;;      Locals:         0       0       0       0
   658 ;;      Temps:          0       0       0       0
   659 ;;      Totals:         0       0       0       0
   660 ;;Total ram usage:        0 bytes
   661 ;; Hardware stack levels used:    1
   662 ;; This function calls:
   663 ;;		Nothing
   664 ;; This function is called by:
   665 ;;		_vread
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           
   670                           ;psect for function _read_adc
   671  06A2                     _read_adc:	
   672                           
   673                           ;assignment4.c: 212: GO = 1;
   674                           
   675                           ;incstack = 0
   676                           ; Regs used in _read_adc: []
   677  06A2  1283               	bcf	3,5	;RP0=0, select bank0
   678  06A3  1303               	bcf	3,6	;RP1=0, select bank0
   679  06A4  149F               	bsf	31,1	;volatile
   680  06A5                     l83:	
   681                           ;assignment4.c: 213: for(;;){
   682                           
   683                           
   684                           ;assignment4.c: 214: if(!GO){
   685  06A5  1C9F               	btfss	31,1	;volatile
   686  06A6  0008               	return
   687  06A7  2EA5               	goto	l83
   688  06A8                     __end_of_read_adc:	
   689                           ;assignment4.c: 216: }
   690                           ;assignment4.c: 217: }
   691                           
   692                           ;assignment4.c: 215: return;
   693                           
   694                           
   695                           	psect	text5
   696  0705                     __ptext5:	
   697 ;; *************** function _read_msg *****************
   698 ;; Defined at:
   699 ;;		line 157 in file "assignment4.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;  msg             1    5[COMMON] unsigned char 
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      unsigned char 
   706 ;; Registers used:
   707 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   713 ;;      Params:         0       0       0       0
   714 ;;      Locals:         1       0       0       0
   715 ;;      Temps:          1       0       0       0
   716 ;;      Totals:         2       0       0       0
   717 ;;Total ram usage:        2 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; Hardware stack levels required when called:    1
   720 ;; This function calls:
   721 ;;		_debug_write
   722 ;;		_set_read
   723 ;;		_wait_while_strobe_high
   724 ;;		_wait_while_strobe_low
   725 ;; This function is called by:
   726 ;;		_main
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           
   731                           ;psect for function _read_msg
   732  0705                     _read_msg:	
   733                           
   734                           ;assignment4.c: 160: set_read();
   735                           
   736                           ;incstack = 0
   737                           ; Regs used in _read_msg: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   738  0705  118A  26A8  118A   	fcall	_set_read
   739                           
   740                           ;assignment4.c: 162: wait_while_strobe_low();
   741  0708  118A  26C8  118A   	fcall	_wait_while_strobe_low
   742                           
   743                           ;assignment4.c: 165: wait_while_strobe_high();
   744  070B  118A  26B8  118A   	fcall	_wait_while_strobe_high
   745                           
   746                           ;assignment4.c: 168: wait_while_strobe_low();
   747  070E  118A  26C8  118A   	fcall	_wait_while_strobe_low
   748                           
   749                           ;assignment4.c: 172: char msg = PORTC;
   750  0711  1283               	bcf	3,5	;RP0=0, select bank0
   751  0712  1303               	bcf	3,6	;RP1=0, select bank0
   752  0713  0807               	movf	7,w	;volatile
   753  0714  00F4               	movwf	??_read_msg
   754  0715  0874               	movf	??_read_msg,w
   755  0716  00F5               	movwf	read_msg@msg
   756                           
   757                           ;assignment4.c: 173: msg &= 0x0f;
   758  0717  300F               	movlw	15
   759  0718  00F4               	movwf	??_read_msg
   760  0719  0874               	movf	??_read_msg,w
   761  071A  05F5               	andwf	read_msg@msg,f
   762                           
   763                           ;assignment4.c: 175: wait_while_strobe_high();
   764  071B  118A  26B8  118A   	fcall	_wait_while_strobe_high
   765                           
   766                           ;assignment4.c: 177: debug_write(msg);
   767  071E  0875               	movf	read_msg@msg,w
   768  071F  118A  2747         	fcall	_debug_write
   769                           
   770                           ;assignment4.c: 179: return msg;
   771  0721  0875               	movf	read_msg@msg,w
   772  0722  0008               	return
   773  0723                     __end_of_read_msg:	
   774                           
   775                           	psect	text6
   776  06C8                     __ptext6:	
   777 ;; *************** function _wait_while_strobe_low *****************
   778 ;; Defined at:
   779 ;;		line 77 in file "assignment4.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;		None
   782 ;; Auto vars:     Size  Location     Type
   783 ;;		None
   784 ;; Return value:  Size  Location     Type
   785 ;;		None               void
   786 ;; Registers used:
   787 ;;		wreg
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   793 ;;      Params:         0       0       0       0
   794 ;;      Locals:         0       0       0       0
   795 ;;      Temps:          1       0       0       0
   796 ;;      Totals:         1       0       0       0
   797 ;;Total ram usage:        1 bytes
   798 ;; Hardware stack levels used:    1
   799 ;; This function calls:
   800 ;;		Nothing
   801 ;; This function is called by:
   802 ;;		_write_msg
   803 ;;		_read_msg
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           
   808                           ;psect for function _wait_while_strobe_low
   809  06C8                     _wait_while_strobe_low:	
   810  06C8                     l52:	
   811                           ;assignment4.c: 81: continue;
   812                           
   813                           ;assignment4.c: 80: while(!RC4){
   814                           
   815                           ;incstack = 0
   816                           ; Regs used in _wait_while_strobe_low: [wreg]
   817                           ;assignment4.c: 79: while(1){
   818                           
   819  06C8  1283               	bcf	3,5	;RP0=0, select bank0
   820  06C9  1303               	bcf	3,6	;RP1=0, select bank0
   821  06CA  1E07               	btfss	7,4	;volatile
   822  06CB  2EC8               	goto	l52
   823                           
   824                           ;assignment4.c: 82: }
   825                           ;assignment4.c: 83: _delay((unsigned long)((1)*(4000000/4000.0)));
   826  06CC  30F9               	movlw	249
   827  06CD  00F0               	movwf	??_wait_while_strobe_low
   828  06CE                     u237:	
   829  06CE  0000               	nop
   830  06CF  0BF0               	decfsz	??_wait_while_strobe_low,f
   831  06D0  2ECE               	goto	u237
   832  06D1  2ED2               	nop2	;nop
   833  06D2  0000               	nop
   834                           
   835                           ;assignment4.c: 84: if(RC4){
   836  06D3  1283               	bcf	3,5	;RP0=0, select bank0
   837  06D4  1303               	bcf	3,6	;RP1=0, select bank0
   838  06D5  1A07               	btfsc	7,4	;volatile
   839  06D6  0008               	return
   840  06D7  2EC8               	goto	l52
   841  06D8                     __end_of_wait_while_strobe_low:	
   842                           ;assignment4.c: 85: return;
   843                           
   844                           
   845                           	psect	text7
   846  06B8                     __ptext7:	
   847 ;; *************** function _wait_while_strobe_high *****************
   848 ;; Defined at:
   849 ;;		line 63 in file "assignment4.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;		None
   852 ;; Auto vars:     Size  Location     Type
   853 ;;		None
   854 ;; Return value:  Size  Location     Type
   855 ;;		None               void
   856 ;; Registers used:
   857 ;;		wreg
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   863 ;;      Params:         0       0       0       0
   864 ;;      Locals:         0       0       0       0
   865 ;;      Temps:          1       0       0       0
   866 ;;      Totals:         1       0       0       0
   867 ;;Total ram usage:        1 bytes
   868 ;; Hardware stack levels used:    1
   869 ;; This function calls:
   870 ;;		Nothing
   871 ;; This function is called by:
   872 ;;		_write_msg
   873 ;;		_read_msg
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           
   878                           ;psect for function _wait_while_strobe_high
   879  06B8                     _wait_while_strobe_high:	
   880  06B8                     l42:	
   881                           ;assignment4.c: 67: continue;
   882                           
   883                           ;assignment4.c: 66: while(RC4){
   884                           
   885                           ;incstack = 0
   886                           ; Regs used in _wait_while_strobe_high: [wreg]
   887                           ;assignment4.c: 65: while(1){
   888                           
   889  06B8  1283               	bcf	3,5	;RP0=0, select bank0
   890  06B9  1303               	bcf	3,6	;RP1=0, select bank0
   891  06BA  1A07               	btfsc	7,4	;volatile
   892  06BB  2EB8               	goto	l42
   893                           
   894                           ;assignment4.c: 68: }
   895                           ;assignment4.c: 69: _delay((unsigned long)((1)*(4000000/4000.0)));
   896  06BC  30F9               	movlw	249
   897  06BD  00F0               	movwf	??_wait_while_strobe_high
   898  06BE                     u247:	
   899  06BE  0000               	nop
   900  06BF  0BF0               	decfsz	??_wait_while_strobe_high,f
   901  06C0  2EBE               	goto	u247
   902  06C1  2EC2               	nop2	;nop
   903  06C2  0000               	nop
   904                           
   905                           ;assignment4.c: 70: if(!RC4){
   906  06C3  1283               	bcf	3,5	;RP0=0, select bank0
   907  06C4  1303               	bcf	3,6	;RP1=0, select bank0
   908  06C5  1E07               	btfss	7,4	;volatile
   909  06C6  0008               	return
   910  06C7  2EB8               	goto	l42
   911  06C8                     __end_of_wait_while_strobe_high:	
   912                           ;assignment4.c: 71: return;
   913                           
   914                           
   915                           	psect	text8
   916  06A8                     __ptext8:	
   917 ;; *************** function _set_read *****************
   918 ;; Defined at:
   919 ;;		line 107 in file "assignment4.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;		None               void
   926 ;; Registers used:
   927 ;;		None
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   933 ;;      Params:         0       0       0       0
   934 ;;      Locals:         0       0       0       0
   935 ;;      Temps:          0       0       0       0
   936 ;;      Totals:         0       0       0       0
   937 ;;Total ram usage:        0 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; This function calls:
   940 ;;		Nothing
   941 ;; This function is called by:
   942 ;;		_write_msg
   943 ;;		_read_msg
   944 ;;		_main
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           
   949                           ;psect for function _set_read
   950  06A8                     _set_read:	
   951                           
   952                           ;assignment4.c: 109: TRISC0 = 1;
   953                           
   954                           ;incstack = 0
   955                           ; Regs used in _set_read: []
   956  06A8  1683               	bsf	3,5	;RP0=1, select bank1
   957  06A9  1303               	bcf	3,6	;RP1=0, select bank1
   958  06AA  1407               	bsf	7,0	;volatile
   959                           
   960                           ;assignment4.c: 110: TRISC1 = 1;
   961  06AB  1487               	bsf	7,1	;volatile
   962                           
   963                           ;assignment4.c: 111: TRISC2 = 1;
   964  06AC  1507               	bsf	7,2	;volatile
   965                           
   966                           ;assignment4.c: 112: TRISC3 = 1;
   967  06AD  1587               	bsf	7,3	;volatile
   968                           
   969                           ;assignment4.c: 113: TRISC4 = 1;
   970  06AE  1607               	bsf	7,4	;volatile
   971  06AF  0008               	return
   972  06B0                     __end_of_set_read:	
   973                           
   974                           	psect	text9
   975  0747                     __ptext9:	
   976 ;; *************** function _debug_write *****************
   977 ;; Defined at:
   978 ;;		line 182 in file "assignment4.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;  msg             1    wreg     unsigned char 
   981 ;; Auto vars:     Size  Location     Type
   982 ;;  msg             1    1[COMMON] unsigned char 
   983 ;;  i               2    2[COMMON] int 
   984 ;; Return value:  Size  Location     Type
   985 ;;		None               void
   986 ;; Registers used:
   987 ;;		wreg, status,2, status,0, btemp+1
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   993 ;;      Params:         0       0       0       0
   994 ;;      Locals:         3       0       0       0
   995 ;;      Temps:          1       0       0       0
   996 ;;      Totals:         4       0       0       0
   997 ;;Total ram usage:        4 bytes
   998 ;; Hardware stack levels used:    1
   999 ;; This function calls:
  1000 ;;		Nothing
  1001 ;; This function is called by:
  1002 ;;		_read_msg
  1003 ;;		_main
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           
  1008                           ;psect for function _debug_write
  1009  0747                     _debug_write:	
  1010                           
  1011                           ;incstack = 0
  1012                           ; Regs used in _debug_write: [wreg+status,2+status,0+btemp+1]
  1013                           ;debug_write@msg stored from wreg
  1014  0747  00F1               	movwf	debug_write@msg
  1015                           
  1016                           ;assignment4.c: 183: for(int i = 0x01; i < 0x10; i <<= 1){
  1017  0748  3001               	movlw	1
  1018  0749  00F2               	movwf	debug_write@i
  1019  074A  3000               	movlw	0
  1020  074B  00F3               	movwf	debug_write@i+1
  1021  074C                     L3:	
  1022  074C  0873               	movf	debug_write@i+1,w
  1023  074D  3A80               	xorlw	128
  1024  074E  00FF               	movwf	127
  1025  074F  3080               	movlw	128
  1026  0750  027F               	subwf	127,w
  1027  0751  1D03               	skipz
  1028  0752  2F55               	goto	u165
  1029  0753  3010               	movlw	16
  1030  0754  0272               	subwf	debug_write@i,w
  1031  0755                     u165:	
  1032  0755  1803               	btfsc	3,0
  1033  0756  0008               	return
  1034                           
  1035                           ;assignment4.c: 184: RC5 = 0;
  1036  0757  1283               	bcf	3,5	;RP0=0, select bank0
  1037  0758  1303               	bcf	3,6	;RP1=0, select bank0
  1038  0759  1287               	bcf	7,5	;volatile
  1039                           
  1040                           ;assignment4.c: 185: _delay((unsigned long)((0.1)*(4000000/4000.0)));
  1041  075A  3021               	movlw	33
  1042  075B  00F0               	movwf	??_debug_write
  1043  075C                     u257:	
  1044  075C  0BF0               	decfsz	??_debug_write,f
  1045  075D  2F5C               	goto	u257
  1046                           
  1047                           ;assignment4.c: 186: RC5 = 1;
  1048  075E  1283               	bcf	3,5	;RP0=0, select bank0
  1049  075F  1303               	bcf	3,6	;RP1=0, select bank0
  1050  0760  1687               	bsf	7,5	;volatile
  1051                           
  1052                           ;assignment4.c: 187: _delay((unsigned long)((0.1)*(4000000/4000.0)));
  1053  0761  3021               	movlw	33
  1054  0762  00F0               	movwf	??_debug_write
  1055  0763                     u267:	
  1056  0763  0BF0               	decfsz	??_debug_write,f
  1057  0764  2F63               	goto	u267
  1058                           
  1059                           ;assignment4.c: 188: RC5 = 0;
  1060  0765  1283               	bcf	3,5	;RP0=0, select bank0
  1061  0766  1303               	bcf	3,6	;RP1=0, select bank0
  1062  0767  1287               	bcf	7,5	;volatile
  1063                           
  1064                           ;assignment4.c: 189: _delay((unsigned long)((0.1)*(4000000/4000.0)));
  1065  0768  3021               	movlw	33
  1066  0769  00F0               	movwf	??_debug_write
  1067  076A                     u277:	
  1068  076A  0BF0               	decfsz	??_debug_write,f
  1069  076B  2F6A               	goto	u277
  1070                           
  1071                           ;assignment4.c: 190: if(msg & i){
  1072  076C  0871               	movf	debug_write@msg,w
  1073  076D  0572               	andwf	debug_write@i,w
  1074  076E  1903               	btfsc	3,2
  1075  076F  2F74               	goto	l78
  1076                           
  1077                           ;assignment4.c: 191: RC5 = 1;
  1078  0770  1283               	bcf	3,5	;RP0=0, select bank0
  1079  0771  1303               	bcf	3,6	;RP1=0, select bank0
  1080  0772  1687               	bsf	7,5	;volatile
  1081                           
  1082                           ;assignment4.c: 192: }else{
  1083  0773  2F77               	goto	l724
  1084  0774                     l78:	
  1085                           
  1086                           ;assignment4.c: 193: RC5 = 0;
  1087  0774  1283               	bcf	3,5	;RP0=0, select bank0
  1088  0775  1303               	bcf	3,6	;RP1=0, select bank0
  1089  0776  1287               	bcf	7,5	;volatile
  1090  0777                     l724:	
  1091                           
  1092                           ;assignment4.c: 194: }
  1093                           ;assignment4.c: 195: _delay((unsigned long)((1)*(4000000/4000.0)));
  1094  0777  30F9               	movlw	249
  1095  0778  00F0               	movwf	??_debug_write
  1096  0779                     u287:	
  1097  0779  0000               	nop
  1098  077A  0BF0               	decfsz	??_debug_write,f
  1099  077B  2F79               	goto	u287
  1100  077C  2F7D               	nop2	;nop
  1101  077D  0000               	nop
  1102                           
  1103                           ;assignment4.c: 196: RC5 = 0;
  1104  077E  1283               	bcf	3,5	;RP0=0, select bank0
  1105  077F  1303               	bcf	3,6	;RP1=0, select bank0
  1106  0780  1287               	bcf	7,5	;volatile
  1107                           
  1108                           ;assignment4.c: 197: _delay((unsigned long)((0.1)*(4000000/4000.0)));
  1109  0781  3021               	movlw	33
  1110  0782  00F0               	movwf	??_debug_write
  1111  0783                     u297:	
  1112  0783  0BF0               	decfsz	??_debug_write,f
  1113  0784  2F83               	goto	u297
  1114                           
  1115                           ;assignment4.c: 198: RC5 = 1;
  1116  0785  1283               	bcf	3,5	;RP0=0, select bank0
  1117  0786  1303               	bcf	3,6	;RP1=0, select bank0
  1118  0787  1687               	bsf	7,5	;volatile
  1119                           
  1120                           ;assignment4.c: 199: _delay((unsigned long)((0.1)*(4000000/4000.0)));
  1121  0788  3021               	movlw	33
  1122  0789  00F0               	movwf	??_debug_write
  1123  078A                     u307:	
  1124  078A  0BF0               	decfsz	??_debug_write,f
  1125  078B  2F8A               	goto	u307
  1126                           
  1127                           ;assignment4.c: 200: RC5 = 0;
  1128  078C  1283               	bcf	3,5	;RP0=0, select bank0
  1129  078D  1303               	bcf	3,6	;RP1=0, select bank0
  1130  078E  1287               	bcf	7,5	;volatile
  1131                           
  1132                           ;assignment4.c: 201: _delay((unsigned long)((0.1)*(4000000/4000.0)));
  1133  078F  3021               	movlw	33
  1134  0790  00F0               	movwf	??_debug_write
  1135  0791                     u317:	
  1136  0791  0BF0               	decfsz	??_debug_write,f
  1137  0792  2F91               	goto	u317
  1138  0793  3001               	movlw	1
  1139  0794                     u185:	
  1140  0794  1003               	clrc
  1141  0795  0DF2               	rlf	debug_write@i,f
  1142  0796  0DF3               	rlf	debug_write@i+1,f
  1143  0797  3EFF               	addlw	-1
  1144  0798  1D03               	skipz
  1145  0799  2F94               	goto	u185
  1146  079A  2F4C               	goto	L3
  1147  079B                     __end_of_debug_write:	
  1148                           
  1149                           	psect	text10
  1150  06D8                     __ptext10:	
  1151 ;; *************** function _init *****************
  1152 ;; Defined at:
  1153 ;;		line 90 in file "assignment4.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;		None
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;		None
  1158 ;; Return value:  Size  Location     Type
  1159 ;;		None               void
  1160 ;; Registers used:
  1161 ;;		wreg
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1167 ;;      Params:         0       0       0       0
  1168 ;;      Locals:         0       0       0       0
  1169 ;;      Temps:          0       0       0       0
  1170 ;;      Totals:         0       0       0       0
  1171 ;;Total ram usage:        0 bytes
  1172 ;; Hardware stack levels used:    1
  1173 ;; This function calls:
  1174 ;;		Nothing
  1175 ;; This function is called by:
  1176 ;;		_main
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           
  1181                           ;psect for function _init
  1182  06D8                     _init:	
  1183                           
  1184                           ;assignment4.c: 93: TRISA2 = 1;
  1185                           
  1186                           ;incstack = 0
  1187                           ; Regs used in _init: [wreg]
  1188  06D8  1683               	bsf	3,5	;RP0=1, select bank1
  1189  06D9  1303               	bcf	3,6	;RP1=0, select bank1
  1190  06DA  1505               	bsf	5,2	;volatile
  1191                           
  1192                           ;assignment4.c: 94: ANSEL = 0b00001001;
  1193  06DB  3009               	movlw	9
  1194  06DC  0091               	movwf	17	;volatile
  1195                           
  1196                           ;assignment4.c: 97: ADCON0 = 0b00001001;
  1197  06DD  3009               	movlw	9
  1198  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  1199  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  1200  06E0  009F               	movwf	31	;volatile
  1201                           
  1202                           ;assignment4.c: 98: ADCON1 = 0b00010000;
  1203  06E1  3010               	movlw	16
  1204  06E2  1683               	bsf	3,5	;RP0=1, select bank1
  1205  06E3  1303               	bcf	3,6	;RP1=0, select bank1
  1206  06E4  009F               	movwf	31	;volatile
  1207                           
  1208                           ;assignment4.c: 102: TRISC5 = 0;
  1209  06E5  1287               	bcf	7,5	;volatile
  1210                           
  1211                           ;assignment4.c: 103: CMCON0 = 0x7;
  1212  06E6  3007               	movlw	7
  1213  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  1214  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  1215  06E9  0099               	movwf	25	;volatile
  1216  06EA  0008               	return
  1217  06EB                     __end_of_init:	
  1218  007E                     btemp	set	126	;btemp
  1219  007E                     wtemp	set	126
  1220  007E                     wtemp0	set	126
  1221  0080                     wtemp1	set	128
  1222  0082                     wtemp2	set	130
  1223  0084                     wtemp3	set	132
  1224  0086                     wtemp4	set	134
  1225  0088                     wtemp5	set	136
  1226  007F                     wtemp6	set	127
  1227  007E                     ttemp	set	126
  1228  007E                     ttemp0	set	126
  1229  0081                     ttemp1	set	129
  1230  0084                     ttemp2	set	132
  1231  0087                     ttemp3	set	135
  1232  007F                     ttemp4	set	127
  1233  007E                     ltemp	set	126
  1234  007E                     ltemp0	set	126
  1235  0082                     ltemp1	set	130
  1236  0086                     ltemp2	set	134
  1237  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      6       6
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_vread
    _write_msg->_wait_while_strobe_high
    _write_msg->_wait_while_strobe_low
    _read_msg->_debug_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     431
                                              7 COMMON     3     3      0
                                              0 BANK0      6     6      0
                        _debug_write
                               _init
                           _read_msg
                           _set_read
                              _vread
                          _write_msg
 ---------------------------------------------------------------------------------
 (1) _write_msg                                            1     1      0      22
                                              1 COMMON     1     1      0
                           _set_read
                          _set_write
             _wait_while_strobe_high
              _wait_while_strobe_low
 ---------------------------------------------------------------------------------
 (2) _set_write                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _vread                                                7     5      2      24
                                              0 COMMON     7     5      2
                           _read_adc
 ---------------------------------------------------------------------------------
 (2) _read_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_msg                                             2     2      0     136
                                              4 COMMON     2     2      0
                        _debug_write
                           _set_read
             _wait_while_strobe_high
              _wait_while_strobe_low
 ---------------------------------------------------------------------------------
 (2) _wait_while_strobe_low                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _wait_while_strobe_high                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _debug_write                                          4     4      0      90
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _debug_write
   _init
   _read_msg
     _debug_write
     _set_read
     _wait_while_strobe_high
     _wait_while_strobe_low
   _set_read
   _vread
     _read_adc
   _write_msg
     _set_read
     _set_write
     _wait_while_strobe_high
     _wait_while_strobe_low

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      6       6       3        7.5%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Dec 10 20:45:44 2015

                             l42 06B8                               l52 06C8                               l83 06A5  
                             l78 0774                               l95 07E3                               _GO 00F9  
                            l724 0777                              l814 07DF                              l794 07A6  
                            l796 07A9                              l788 07A1                              l798 07AA  
                            _RC4 003C                              _RC5 003D                              u215 0734  
                            u225 07BE                              u307 078A                              u317 0791  
                            u165 0755                              u237 06CE                              u247 06BE  
                            u185 0794                              u257 075C                              u267 0763  
                            u277 076A                              u287 0779                              u297 0783  
                   __CFG_WDTE$ON 0000                             _main 079B                             _init 06D8  
                           btemp 007E                             ltemp 007E                             start 0000  
                           ttemp 007E                             wtemp 007E                            ?_main 0070  
                          ?_init 0070                            _ANSEL 0091                            _PORTC 0007  
                          _vread 0723                            ltemp0 007E                            ltemp1 0082  
                          ltemp2 0086                            ltemp3 0080                            ttemp0 007E  
                          ttemp1 0081                            ttemp2 0084                            ttemp3 0087  
                          ttemp4 007F                            status 0003                            wtemp0 007E  
                          wtemp1 0080                            wtemp2 0082                            wtemp3 0084  
                          wtemp4 0086                            wtemp5 0088                            wtemp6 007F  
           __size_of_debug_write 0054                  __initialization 07FD                     __end_of_main 07FD  
                   __end_of_init 06EB                           ??_main 0077                           ??_init 0070  
                         _ADCON0 001F                           _ADCON1 009F                           _ADRESH 001E  
                         _ADRESL 009E                           _CMCON0 0019                           ?_vread 0070  
                         _TRISA2 042A                           _TRISC0 0438                           _TRISC1 0439  
                         _TRISC2 043A                           _TRISC3 043B                           _TRISC4 043C  
                         _TRISC5 043D                 __end_of_read_adc 06A8                 __end_of_read_msg 0723  
               __end_of_set_read 06B0            _wait_while_strobe_low 06C8         ??_wait_while_strobe_high 0070  
                    read_msg@msg 0075          __end_of__initialization 07FD                   __pcstackCOMMON 0070  
                  __end_of_vread 0747                          ??_vread 0072                       __pmaintext 079B  
             __size_of_set_write 0008           ?_wait_while_strobe_low 0070  __size_of_wait_while_strobe_high 0010  
                      ?_read_adc 0070                        ?_read_msg 0070               __size_of_write_msg 001A  
                      ?_set_read 0070                          __ptext1 06EB                          __ptext2 06B0  
                        __ptext3 0723                          __ptext4 06A2                          __ptext5 0705  
                        __ptext6 06C8                          __ptext7 06B8                          __ptext8 06A8  
                        __ptext9 0747                          main@cmd 0020                    ??_debug_write 0070  
           end_of_initialization 07FD                       ??_read_adc 0070                       ??_read_msg 0074  
              __end_of_set_write 06B8                       ??_set_read 0070           _wait_while_strobe_high 06B8  
              __end_of_write_msg 0705                       main@chunk1 0021                       main@chunk2 0022  
                     main@chunk3 0023              __end_of_debug_write 079B                     write_msg@msg 0071  
            start_initialization 07FD          ??_wait_while_strobe_low 0070                        ___latbits 0001  
                  __pcstackBANK0 0020                      _debug_write 0747                __size_of_read_adc 0006  
              __size_of_read_msg 001E                __size_of_set_read 0008                   __size_of_vread 0024  
                   debug_write@i 0072          ?_wait_while_strobe_high 0070                        _set_write 06B0  
                      _write_msg 06EB   __end_of_wait_while_strobe_high 06C8                       ?_set_write 0070  
                       __ptext10 06D8                       ?_write_msg 0070                         _read_adc 06A2  
                  __size_of_main 0062                    __size_of_init 0013                         _read_msg 0705  
                       _set_read 06A8                   debug_write@msg 0071                         main@data 0024  
 __size_of_wait_while_strobe_low 0010    __end_of_wait_while_strobe_low 06D8                        vread@rval 0075  
                   ?_debug_write 0070                      ??_set_write 0070                      ??_write_msg 0071  
