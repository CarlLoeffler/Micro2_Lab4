

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Dec 10 21:29:20 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F688
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	text10,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     	;# 
    20  0001                     	;# 
    21  0002                     	;# 
    22  0003                     	;# 
    23  0004                     	;# 
    24  0005                     	;# 
    25  0007                     	;# 
    26  000A                     	;# 
    27  000B                     	;# 
    28  000C                     	;# 
    29  000E                     	;# 
    30  000E                     	;# 
    31  000F                     	;# 
    32  0010                     	;# 
    33  0011                     	;# 
    34  0012                     	;# 
    35  0013                     	;# 
    36  0014                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0017                     	;# 
    40  0018                     	;# 
    41  0019                     	;# 
    42  001A                     	;# 
    43  001E                     	;# 
    44  001F                     	;# 
    45  0081                     	;# 
    46  0085                     	;# 
    47  0087                     	;# 
    48  008C                     	;# 
    49  008E                     	;# 
    50  008F                     	;# 
    51  0090                     	;# 
    52  0091                     	;# 
    53  0095                     	;# 
    54  0095                     	;# 
    55  0096                     	;# 
    56  0096                     	;# 
    57  0097                     	;# 
    58  0098                     	;# 
    59  0099                     	;# 
    60  009A                     	;# 
    61  009A                     	;# 
    62  009B                     	;# 
    63  009C                     	;# 
    64  009D                     	;# 
    65  009E                     	;# 
    66  009F                     	;# 
    67  001F                     _ADCON0	set	31
    68  001E                     _ADRESH	set	30
    69  0019                     _CMCON0	set	25
    70  0007                     _PORTC	set	7
    71  00F9                     _GO	set	249
    72  003C                     _RC4	set	60
    73  003D                     _RC5	set	61
    74  009F                     _ADCON1	set	159
    75  009E                     _ADRESL	set	158
    76  0091                     _ANSEL	set	145
    77  042A                     _TRISA2	set	1066
    78  0438                     _TRISC0	set	1080
    79  0439                     _TRISC1	set	1081
    80  043A                     _TRISC2	set	1082
    81  043B                     _TRISC3	set	1083
    82  043C                     _TRISC4	set	1084
    83  043D                     _TRISC5	set	1085
    84                           
    85                           ; #config settings
    86  0000                     
    87                           	psect	cinit
    88  07FD                     start_initialization:	
    89  07FD                     __initialization:	
    90  07FD                     end_of_initialization:	
    91                           ;End of C runtime variable initialization code
    92                           
    93  07FD                     __end_of__initialization:	
    94  07FD  0183               	clrf	3
    95  07FE  118A  2F98         	ljmp	_main	;jump to C main() function
    96                           
    97                           	psect	cstackCOMMON
    98  0070                     __pcstackCOMMON:	
    99  0070                     ?_debug_write:	
   100  0070                     ??_debug_write:	
   101                           ; 0 bytes @ 0x0
   102                           
   103  0070                     ?_wait_while_strobe_high:	
   104                           ; 0 bytes @ 0x0
   105                           
   106  0070                     ??_wait_while_strobe_high:	
   107                           ; 0 bytes @ 0x0
   108                           
   109  0070                     ?_wait_while_strobe_low:	
   110                           ; 0 bytes @ 0x0
   111                           
   112  0070                     ??_wait_while_strobe_low:	
   113                           ; 0 bytes @ 0x0
   114                           
   115  0070                     ?_init:	
   116                           ; 0 bytes @ 0x0
   117                           
   118  0070                     ??_init:	
   119                           ; 0 bytes @ 0x0
   120                           
   121  0070                     ?_set_read:	
   122                           ; 0 bytes @ 0x0
   123                           
   124  0070                     ??_set_read:	
   125                           ; 0 bytes @ 0x0
   126                           
   127  0070                     ?_set_write:	
   128                           ; 0 bytes @ 0x0
   129                           
   130  0070                     ??_set_write:	
   131                           ; 0 bytes @ 0x0
   132                           
   133  0070                     ?_write_msg:	
   134                           ; 0 bytes @ 0x0
   135                           
   136  0070                     ?_read_adc:	
   137                           ; 0 bytes @ 0x0
   138                           
   139  0070                     ??_read_adc:	
   140                           ; 0 bytes @ 0x0
   141                           
   142  0070                     ?_main:	
   143                           ; 0 bytes @ 0x0
   144                           
   145  0070                     ?_read_msg:	
   146                           ; 0 bytes @ 0x0
   147                           
   148  0070                     ?_vread:	
   149                           ; 1 bytes @ 0x0
   150                           
   151                           
   152                           ; 2 bytes @ 0x0
   153  0070                     	ds	1
   154  0071                     ??_write_msg:	
   155  0071                     write_msg@msg:	
   156                           ; 0 bytes @ 0x1
   157                           
   158  0071                     debug_write@msg:	
   159                           ; 1 bytes @ 0x1
   160                           
   161                           
   162                           ; 1 bytes @ 0x1
   163  0071                     	ds	1
   164  0072                     ??_vread:	
   165  0072                     debug_write@i:	
   166                           ; 0 bytes @ 0x2
   167                           
   168                           
   169                           ; 2 bytes @ 0x2
   170  0072                     	ds	2
   171  0074                     ??_read_msg:	
   172                           
   173                           ; 0 bytes @ 0x4
   174  0074                     	ds	1
   175  0075                     read_msg@msg:	
   176  0075                     vread@rval:	
   177                           ; 1 bytes @ 0x5
   178                           
   179                           
   180                           ; 2 bytes @ 0x5
   181  0075                     	ds	2
   182  0077                     ??_main:	
   183                           
   184                           ; 0 bytes @ 0x7
   185  0077                     	ds	3
   186                           
   187                           	psect	cstackBANK0
   188  0020                     __pcstackBANK0:	
   189  0020                     main@cmd:	
   190                           
   191                           ; 1 bytes @ 0x0
   192  0020                     	ds	1
   193  0021                     main@chunk1:	
   194                           
   195                           ; 1 bytes @ 0x1
   196  0021                     	ds	1
   197  0022                     main@chunk2:	
   198                           
   199                           ; 1 bytes @ 0x2
   200  0022                     	ds	1
   201  0023                     main@chunk3:	
   202                           
   203                           ; 1 bytes @ 0x3
   204  0023                     	ds	1
   205  0024                     main@data:	
   206                           
   207                           ; 2 bytes @ 0x4
   208  0024                     	ds	2
   209                           
   210                           	psect	maintext
   211  0798                     __pmaintext:	
   212 ;;
   213 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   214 ;;
   215 ;; *************** function _main *****************
   216 ;; Defined at:
   217 ;;		line 230 in file "assignment4.c"
   218 ;; Parameters:    Size  Location     Type
   219 ;;		None
   220 ;; Auto vars:     Size  Location     Type
   221 ;;  chunk3          1    3[BANK0 ] unsigned char 
   222 ;;  chunk2          1    2[BANK0 ] unsigned char 
   223 ;;  chunk1          1    1[BANK0 ] unsigned char 
   224 ;;  data            2    4[BANK0 ] int 
   225 ;;  cmd             1    0[BANK0 ] unsigned char 
   226 ;; Return value:  Size  Location     Type
   227 ;;		None               void
   228 ;; Registers used:
   229 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   230 ;; Tracked objects:
   231 ;;		On entry : B00/0
   232 ;;		On exit  : 0/0
   233 ;;		Unchanged: 0/0
   234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   235 ;;      Params:         0       0       0       0
   236 ;;      Locals:         0       6       0       0
   237 ;;      Temps:          3       0       0       0
   238 ;;      Totals:         3       6       0       0
   239 ;;Total ram usage:        9 bytes
   240 ;; Hardware stack levels required when called:    2
   241 ;; This function calls:
   242 ;;		_debug_write
   243 ;;		_init
   244 ;;		_read_msg
   245 ;;		_set_read
   246 ;;		_vread
   247 ;;		_write_msg
   248 ;; This function is called by:
   249 ;;		Startup code after reset
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253                           
   254                           ;psect for function _main
   255  0798                     _main:	
   256                           
   257                           ;assignment4.c: 232: init();
   258                           
   259                           ;incstack = 0
   260                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   261  0798  118A  26D5  118A   	fcall	_init
   262                           
   263                           ;assignment4.c: 233: set_read();
   264  079B  118A  26A5  118A   	fcall	_set_read
   265                           
   266                           ;assignment4.c: 238: char cmd;
   267                           ;assignment4.c: 239: int data;
   268                           ;assignment4.c: 240: RC5 = 0;
   269  079E  1283               	bcf	3,5	;RP0=0, select bank0
   270  079F  1303               	bcf	3,6	;RP1=0, select bank0
   271  07A0  1287               	bcf	7,5	;volatile
   272                           
   273                           ;assignment4.c: 242: debug_write(0xA);
   274  07A1  300A               	movlw	10
   275  07A2  118A  2744  118A   	fcall	_debug_write
   276                           
   277                           ;assignment4.c: 249: switch(cmd){
   278  07A5  2FE3               	goto	l793
   279  07A6                     l799:	
   280                           ;assignment4.c: 250: case(0x00):
   281                           
   282                           
   283                           ;assignment4.c: 251: init();
   284  07A6  118A  26D5  118A   	fcall	_init
   285  07A9                     l801:	
   286                           ;assignment4.c: 255: case(0x01):
   287                           
   288                           ;assignment4.c: 254: break;
   289                           
   290                           ;assignment4.c: 253: write_msg(0x0E);
   291                           
   292  07A9  2FDD               	goto	L2
   293  07AA                     l803:	
   294                           ;assignment4.c: 259: case(0x02):
   295                           
   296                           ;assignment4.c: 258: break;
   297                           
   298                           ;assignment4.c: 257: write_msg(0x0E);
   299                           
   300                           
   301                           ;assignment4.c: 261: data = vread();
   302  07AA  118A  2720  118A   	fcall	_vread
   303  07AD  0871               	movf	?_vread+1,w
   304  07AE  1283               	bcf	3,5	;RP0=0, select bank0
   305  07AF  1303               	bcf	3,6	;RP1=0, select bank0
   306  07B0  00A5               	movwf	main@data+1
   307  07B1  0870               	movf	?_vread,w
   308  07B2  00A4               	movwf	main@data
   309                           
   310                           ;assignment4.c: 262: char chunk1, chunk2, chunk3;
   311                           ;assignment4.c: 263: chunk1 = (char) (data & 0x000f);
   312  07B3  0824               	movf	main@data,w
   313  07B4  390F               	andlw	15
   314  07B5  00F7               	movwf	??_main
   315  07B6  0877               	movf	??_main,w
   316  07B7  00A1               	movwf	main@chunk1
   317                           
   318                           ;assignment4.c: 264: chunk2 = (char) ((data >> 4) & 0x000f);
   319  07B8  0825               	movf	main@data+1,w
   320  07B9  00F8               	movwf	??_main+1
   321  07BA  0824               	movf	main@data,w
   322  07BB  00F7               	movwf	??_main
   323  07BC  3004               	movlw	4
   324  07BD  00FF               	movwf	127
   325  07BE                     u225:	
   326  07BE  0D78               	rlf	??_main+1,w
   327  07BF  0CF8               	rrf	??_main+1,f
   328  07C0  0CF7               	rrf	??_main,f
   329  07C1  0BFF               	decfsz	127,f
   330  07C2  2FBE               	goto	u225
   331  07C3  0877               	movf	??_main,w
   332  07C4  390F               	andlw	15
   333  07C5  00F9               	movwf	??_main+2
   334  07C6  0879               	movf	??_main+2,w
   335  07C7  00A2               	movwf	main@chunk2
   336                           
   337                           ;assignment4.c: 265: chunk3 = (char) ((data >> 8) & 0x000f);
   338  07C8  0825               	movf	main@data+1,w
   339  07C9  390F               	andlw	15
   340  07CA  00F7               	movwf	??_main
   341  07CB  0877               	movf	??_main,w
   342  07CC  00A3               	movwf	main@chunk3
   343                           
   344                           ;assignment4.c: 266: write_msg(chunk3);
   345  07CD  0823               	movf	main@chunk3,w
   346  07CE  118A  26E8  118A   	fcall	_write_msg
   347                           
   348                           ;assignment4.c: 267: write_msg(chunk2);
   349  07D1  1283               	bcf	3,5	;RP0=0, select bank0
   350  07D2  1303               	bcf	3,6	;RP1=0, select bank0
   351  07D3  0822               	movf	main@chunk2,w
   352  07D4  118A  26E8  118A   	fcall	_write_msg
   353                           
   354                           ;assignment4.c: 268: write_msg(chunk1);
   355  07D7  1283               	bcf	3,5	;RP0=0, select bank0
   356  07D8  1303               	bcf	3,6	;RP1=0, select bank0
   357  07D9  0821               	movf	main@chunk1,w
   358  07DA  118A  26E8  118A   	fcall	_write_msg
   359  07DD                     L2:	
   360                           
   361                           ;assignment4.c: 270: write_msg(0x0E);
   362  07DD  300E               	movlw	14
   363  07DE  2FE0               	goto	L1
   364  07DF                     l819:	
   365                           ;assignment4.c: 272: default:
   366                           
   367                           ;assignment4.c: 271: break;
   368                           
   369                           
   370                           ;assignment4.c: 273: write_msg(0x0F);
   371  07DF  300F               	movlw	15
   372  07E0                     L1:	
   373  07E0  118A  26E8  118A   	fcall	_write_msg
   374  07E3                     l793:	
   375                           ;assignment4.c: 244: while(1){
   376                           
   377                           ;assignment4.c: 275: }
   378                           
   379                           ;assignment4.c: 274: break;
   380                           
   381                           
   382                           ;assignment4.c: 246: RC5 = 1;
   383  07E3  1283               	bcf	3,5	;RP0=0, select bank0
   384  07E4  1303               	bcf	3,6	;RP1=0, select bank0
   385  07E5  1687               	bsf	7,5	;volatile
   386                           
   387                           ;assignment4.c: 247: cmd = read_msg();
   388  07E6  118A  2702  118A   	fcall	_read_msg
   389  07E9  00F7               	movwf	??_main
   390  07EA  0877               	movf	??_main,w
   391  07EB  1283               	bcf	3,5	;RP0=0, select bank0
   392  07EC  1303               	bcf	3,6	;RP1=0, select bank0
   393  07ED  00A0               	movwf	main@cmd
   394                           
   395                           ;assignment4.c: 248: RC5 = 0;
   396  07EE  1287               	bcf	7,5	;volatile
   397  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   398  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   399  07F1  0820               	movf	main@cmd,w
   400                           
   401                           ; Switch size 1, requested type "space"
   402                           ; Number of cases is 3, Range of values is 0 to 2
   403                           ; switch strategies available:
   404                           ; Name         Instructions Cycles
   405                           ; simple_byte           10     6 (average)
   406                           ; direct_byte           13     7 (fixed)
   407                           ; jumptable            260     6 (fixed)
   408                           ;	Chosen strategy is simple_byte
   409  07F2  3A00               	xorlw	0	; case 0
   410  07F3  1903               	skipnz
   411  07F4  2FA6               	goto	l799
   412  07F5  3A01               	xorlw	1	; case 1
   413  07F6  1903               	skipnz
   414  07F7  2FA9               	goto	l801
   415  07F8  3A03               	xorlw	3	; case 2
   416  07F9  1903               	skipnz
   417  07FA  2FAA               	goto	l803
   418  07FB  2FDF               	goto	l819
   419  07FC  2FE3               	goto	l793
   420  07FD                     __end_of_main:	
   421                           
   422                           	psect	text1
   423  06E8                     __ptext1:	
   424 ;; *************** function _write_msg *****************
   425 ;; Defined at:
   426 ;;		line 134 in file "assignment4.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;  msg             1    wreg     unsigned char 
   429 ;; Auto vars:     Size  Location     Type
   430 ;;  msg             1    1[COMMON] unsigned char 
   431 ;; Return value:  Size  Location     Type
   432 ;;		None               void
   433 ;; Registers used:
   434 ;;		wreg, status,2, status,0, pclath, cstack
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   440 ;;      Params:         0       0       0       0
   441 ;;      Locals:         1       0       0       0
   442 ;;      Temps:          0       0       0       0
   443 ;;      Totals:         1       0       0       0
   444 ;;Total ram usage:        1 bytes
   445 ;; Hardware stack levels used:    1
   446 ;; Hardware stack levels required when called:    1
   447 ;; This function calls:
   448 ;;		_set_read
   449 ;;		_set_write
   450 ;;		_wait_while_strobe_high
   451 ;;		_wait_while_strobe_low
   452 ;; This function is called by:
   453 ;;		_main
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           
   458                           ;psect for function _write_msg
   459  06E8                     _write_msg:	
   460                           
   461                           ;incstack = 0
   462                           ; Regs used in _write_msg: [wreg+status,2+status,0+pclath+cstack]
   463                           ;write_msg@msg stored from wreg
   464  06E8  00F1               	movwf	write_msg@msg
   465                           
   466                           ;assignment4.c: 137: wait_while_strobe_low();
   467  06E9  118A  26C5  118A   	fcall	_wait_while_strobe_low
   468                           
   469                           ;assignment4.c: 140: wait_while_strobe_high();
   470  06EC  118A  26B5  118A   	fcall	_wait_while_strobe_high
   471                           
   472                           ;assignment4.c: 143: PORTC = msg;
   473  06EF  0871               	movf	write_msg@msg,w
   474  06F0  1283               	bcf	3,5	;RP0=0, select bank0
   475  06F1  1303               	bcf	3,6	;RP1=0, select bank0
   476  06F2  0087               	movwf	7	;volatile
   477                           
   478                           ;assignment4.c: 144: set_write();
   479  06F3  118A  26AD  118A   	fcall	_set_write
   480                           
   481                           ;assignment4.c: 145: wait_while_strobe_low();
   482  06F6  118A  26C5  118A   	fcall	_wait_while_strobe_low
   483                           
   484                           ;assignment4.c: 148: wait_while_strobe_high();
   485  06F9  118A  26B5  118A   	fcall	_wait_while_strobe_high
   486                           
   487                           ;assignment4.c: 151: PORTC = 0x0;
   488  06FC  1283               	bcf	3,5	;RP0=0, select bank0
   489  06FD  1303               	bcf	3,6	;RP1=0, select bank0
   490  06FE  0187               	clrf	7	;volatile
   491                           
   492                           ;assignment4.c: 152: set_read();
   493  06FF  118A  26A5         	fcall	_set_read
   494  0701  0008               	return
   495  0702                     __end_of_write_msg:	
   496                           
   497                           	psect	text2
   498  06AD                     __ptext2:	
   499 ;; *************** function _set_write *****************
   500 ;; Defined at:
   501 ;;		line 116 in file "assignment4.c"
   502 ;; Parameters:    Size  Location     Type
   503 ;;		None
   504 ;; Auto vars:     Size  Location     Type
   505 ;;		None
   506 ;; Return value:  Size  Location     Type
   507 ;;		None               void
   508 ;; Registers used:
   509 ;;		None
   510 ;; Tracked objects:
   511 ;;		On entry : 0/0
   512 ;;		On exit  : 0/0
   513 ;;		Unchanged: 0/0
   514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   515 ;;      Params:         0       0       0       0
   516 ;;      Locals:         0       0       0       0
   517 ;;      Temps:          0       0       0       0
   518 ;;      Totals:         0       0       0       0
   519 ;;Total ram usage:        0 bytes
   520 ;; Hardware stack levels used:    1
   521 ;; This function calls:
   522 ;;		Nothing
   523 ;; This function is called by:
   524 ;;		_write_msg
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528                           
   529                           ;psect for function _set_write
   530  06AD                     _set_write:	
   531                           
   532                           ;assignment4.c: 117: TRISC0 = 0;
   533                           
   534                           ;incstack = 0
   535                           ; Regs used in _set_write: []
   536  06AD  1683               	bsf	3,5	;RP0=1, select bank1
   537  06AE  1303               	bcf	3,6	;RP1=0, select bank1
   538  06AF  1007               	bcf	7,0	;volatile
   539                           
   540                           ;assignment4.c: 118: TRISC1 = 0;
   541  06B0  1087               	bcf	7,1	;volatile
   542                           
   543                           ;assignment4.c: 119: TRISC2 = 0;
   544  06B1  1107               	bcf	7,2	;volatile
   545                           
   546                           ;assignment4.c: 120: TRISC3 = 0;
   547  06B2  1187               	bcf	7,3	;volatile
   548                           
   549                           ;assignment4.c: 121: TRISC4 = 1;
   550  06B3  1607               	bsf	7,4	;volatile
   551  06B4  0008               	return
   552  06B5                     __end_of_set_write:	
   553                           
   554                           	psect	text3
   555  0720                     __ptext3:	
   556 ;; *************** function _vread *****************
   557 ;; Defined at:
   558 ;;		line 220 in file "assignment4.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;		None
   561 ;; Auto vars:     Size  Location     Type
   562 ;;  rval            2    5[COMMON] int 
   563 ;; Return value:  Size  Location     Type
   564 ;;                  2    0[COMMON] int 
   565 ;; Registers used:
   566 ;;		wreg, status,2, status,0, pclath, cstack
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   572 ;;      Params:         2       0       0       0
   573 ;;      Locals:         2       0       0       0
   574 ;;      Temps:          3       0       0       0
   575 ;;      Totals:         7       0       0       0
   576 ;;Total ram usage:        7 bytes
   577 ;; Hardware stack levels used:    1
   578 ;; Hardware stack levels required when called:    1
   579 ;; This function calls:
   580 ;;		_read_adc
   581 ;; This function is called by:
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           
   587                           ;psect for function _vread
   588  0720                     _vread:	
   589                           
   590                           ;assignment4.c: 221: read_adc();
   591                           
   592                           ;incstack = 0
   593                           ; Regs used in _vread: [wreg+status,2+status,0+pclath+cstack]
   594  0720  118A  269F  118A   	fcall	_read_adc
   595                           
   596                           ;assignment4.c: 223: int rval = ADRESH;
   597  0723  1283               	bcf	3,5	;RP0=0, select bank0
   598  0724  1303               	bcf	3,6	;RP1=0, select bank0
   599  0725  081E               	movf	30,w	;volatile
   600  0726  00F2               	movwf	??_vread
   601  0727  01F3               	clrf	??_vread+1
   602  0728  0872               	movf	??_vread,w
   603  0729  00F5               	movwf	vread@rval
   604  072A  0873               	movf	??_vread+1,w
   605  072B  00F6               	movwf	vread@rval+1
   606                           
   607                           ;assignment4.c: 225: rval += (ADRESL>>6);
   608  072C  1683               	bsf	3,5	;RP0=1, select bank1
   609  072D  1303               	bcf	3,6	;RP1=0, select bank1
   610  072E  081E               	movf	30,w	;volatile
   611  072F  00F2               	movwf	??_vread
   612  0730  3006               	movlw	6
   613  0731                     u215:	
   614  0731  1003               	clrc
   615  0732  0CF2               	rrf	??_vread,f
   616  0733  3EFF               	addlw	-1
   617  0734  1D03               	skipz
   618  0735  2F31               	goto	u215
   619  0736  0872               	movf	??_vread,w
   620  0737  00F3               	movwf	??_vread+1
   621  0738  01F4               	clrf	??_vread+2
   622  0739  0873               	movf	??_vread+1,w
   623  073A  07F5               	addwf	vread@rval,f
   624  073B  1803               	skipnc
   625  073C  0AF6               	incf	vread@rval+1,f
   626  073D  0874               	movf	??_vread+2,w
   627  073E  07F6               	addwf	vread@rval+1,f
   628                           
   629                           ;assignment4.c: 226: return rval;
   630  073F  0876               	movf	vread@rval+1,w
   631  0740  00F1               	movwf	?_vread+1
   632  0741  0875               	movf	vread@rval,w
   633  0742  00F0               	movwf	?_vread
   634  0743  0008               	return
   635  0744                     __end_of_vread:	
   636                           
   637                           	psect	text4
   638  069F                     __ptext4:	
   639 ;; *************** function _read_adc *****************
   640 ;; Defined at:
   641 ;;		line 209 in file "assignment4.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;		None
   646 ;; Return value:  Size  Location     Type
   647 ;;		None               void
   648 ;; Registers used:
   649 ;;		None
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   655 ;;      Params:         0       0       0       0
   656 ;;      Locals:         0       0       0       0
   657 ;;      Temps:          0       0       0       0
   658 ;;      Totals:         0       0       0       0
   659 ;;Total ram usage:        0 bytes
   660 ;; Hardware stack levels used:    1
   661 ;; This function calls:
   662 ;;		Nothing
   663 ;; This function is called by:
   664 ;;		_vread
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           
   669                           ;psect for function _read_adc
   670  069F                     _read_adc:	
   671                           
   672                           ;assignment4.c: 212: GO = 1;
   673                           
   674                           ;incstack = 0
   675                           ; Regs used in _read_adc: []
   676  069F  1283               	bcf	3,5	;RP0=0, select bank0
   677  06A0  1303               	bcf	3,6	;RP1=0, select bank0
   678  06A1  149F               	bsf	31,1	;volatile
   679  06A2                     l83:	
   680                           ;assignment4.c: 213: for(;;){
   681                           
   682                           
   683                           ;assignment4.c: 214: if(!GO){
   684  06A2  1C9F               	btfss	31,1	;volatile
   685  06A3  0008               	return
   686  06A4  2EA2               	goto	l83
   687  06A5                     __end_of_read_adc:	
   688                           ;assignment4.c: 216: }
   689                           ;assignment4.c: 217: }
   690                           
   691                           ;assignment4.c: 215: return;
   692                           
   693                           
   694                           	psect	text5
   695  0702                     __ptext5:	
   696 ;; *************** function _read_msg *****************
   697 ;; Defined at:
   698 ;;		line 157 in file "assignment4.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;		None
   701 ;; Auto vars:     Size  Location     Type
   702 ;;  msg             1    5[COMMON] unsigned char 
   703 ;; Return value:  Size  Location     Type
   704 ;;                  1    wreg      unsigned char 
   705 ;; Registers used:
   706 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   712 ;;      Params:         0       0       0       0
   713 ;;      Locals:         1       0       0       0
   714 ;;      Temps:          1       0       0       0
   715 ;;      Totals:         2       0       0       0
   716 ;;Total ram usage:        2 bytes
   717 ;; Hardware stack levels used:    1
   718 ;; Hardware stack levels required when called:    1
   719 ;; This function calls:
   720 ;;		_debug_write
   721 ;;		_set_read
   722 ;;		_wait_while_strobe_high
   723 ;;		_wait_while_strobe_low
   724 ;; This function is called by:
   725 ;;		_main
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           
   730                           ;psect for function _read_msg
   731  0702                     _read_msg:	
   732                           
   733                           ;assignment4.c: 160: set_read();
   734                           
   735                           ;incstack = 0
   736                           ; Regs used in _read_msg: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   737  0702  118A  26A5  118A   	fcall	_set_read
   738                           
   739                           ;assignment4.c: 162: wait_while_strobe_low();
   740  0705  118A  26C5  118A   	fcall	_wait_while_strobe_low
   741                           
   742                           ;assignment4.c: 165: wait_while_strobe_high();
   743  0708  118A  26B5  118A   	fcall	_wait_while_strobe_high
   744                           
   745                           ;assignment4.c: 168: wait_while_strobe_low();
   746  070B  118A  26C5  118A   	fcall	_wait_while_strobe_low
   747                           
   748                           ;assignment4.c: 172: char msg = PORTC;
   749  070E  1283               	bcf	3,5	;RP0=0, select bank0
   750  070F  1303               	bcf	3,6	;RP1=0, select bank0
   751  0710  0807               	movf	7,w	;volatile
   752  0711  00F4               	movwf	??_read_msg
   753  0712  0874               	movf	??_read_msg,w
   754  0713  00F5               	movwf	read_msg@msg
   755                           
   756                           ;assignment4.c: 173: msg &= 0x0f;
   757  0714  300F               	movlw	15
   758  0715  00F4               	movwf	??_read_msg
   759  0716  0874               	movf	??_read_msg,w
   760  0717  05F5               	andwf	read_msg@msg,f
   761                           
   762                           ;assignment4.c: 175: wait_while_strobe_high();
   763  0718  118A  26B5  118A   	fcall	_wait_while_strobe_high
   764                           
   765                           ;assignment4.c: 177: debug_write(msg);
   766  071B  0875               	movf	read_msg@msg,w
   767  071C  118A  2744         	fcall	_debug_write
   768                           
   769                           ;assignment4.c: 179: return msg;
   770  071E  0875               	movf	read_msg@msg,w
   771  071F  0008               	return
   772  0720                     __end_of_read_msg:	
   773                           
   774                           	psect	text6
   775  06C5                     __ptext6:	
   776 ;; *************** function _wait_while_strobe_low *****************
   777 ;; Defined at:
   778 ;;		line 77 in file "assignment4.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;		None
   781 ;; Auto vars:     Size  Location     Type
   782 ;;		None
   783 ;; Return value:  Size  Location     Type
   784 ;;		None               void
   785 ;; Registers used:
   786 ;;		wreg
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   792 ;;      Params:         0       0       0       0
   793 ;;      Locals:         0       0       0       0
   794 ;;      Temps:          1       0       0       0
   795 ;;      Totals:         1       0       0       0
   796 ;;Total ram usage:        1 bytes
   797 ;; Hardware stack levels used:    1
   798 ;; This function calls:
   799 ;;		Nothing
   800 ;; This function is called by:
   801 ;;		_write_msg
   802 ;;		_read_msg
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           
   807                           ;psect for function _wait_while_strobe_low
   808  06C5                     _wait_while_strobe_low:	
   809  06C5                     l52:	
   810                           ;assignment4.c: 81: continue;
   811                           
   812                           ;assignment4.c: 80: while(!RC4){
   813                           
   814                           ;incstack = 0
   815                           ; Regs used in _wait_while_strobe_low: [wreg]
   816                           ;assignment4.c: 79: while(1){
   817                           
   818  06C5  1283               	bcf	3,5	;RP0=0, select bank0
   819  06C6  1303               	bcf	3,6	;RP1=0, select bank0
   820  06C7  1E07               	btfss	7,4	;volatile
   821  06C8  2EC5               	goto	l52
   822                           
   823                           ;assignment4.c: 82: }
   824                           ;assignment4.c: 83: _delay((unsigned long)((1)*(4000000/4000.0)));
   825  06C9  30F9               	movlw	249
   826  06CA  00F0               	movwf	??_wait_while_strobe_low
   827  06CB                     u237:	
   828  06CB  0000               	nop
   829  06CC  0BF0               	decfsz	??_wait_while_strobe_low,f
   830  06CD  2ECB               	goto	u237
   831  06CE  2ECF               	nop2	;nop
   832  06CF  0000               	nop
   833                           
   834                           ;assignment4.c: 84: if(RC4){
   835  06D0  1283               	bcf	3,5	;RP0=0, select bank0
   836  06D1  1303               	bcf	3,6	;RP1=0, select bank0
   837  06D2  1A07               	btfsc	7,4	;volatile
   838  06D3  0008               	return
   839  06D4  2EC5               	goto	l52
   840  06D5                     __end_of_wait_while_strobe_low:	
   841                           ;assignment4.c: 85: return;
   842                           
   843                           
   844                           	psect	text7
   845  06B5                     __ptext7:	
   846 ;; *************** function _wait_while_strobe_high *****************
   847 ;; Defined at:
   848 ;;		line 63 in file "assignment4.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;		None
   851 ;; Auto vars:     Size  Location     Type
   852 ;;		None
   853 ;; Return value:  Size  Location     Type
   854 ;;		None               void
   855 ;; Registers used:
   856 ;;		wreg
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   862 ;;      Params:         0       0       0       0
   863 ;;      Locals:         0       0       0       0
   864 ;;      Temps:          1       0       0       0
   865 ;;      Totals:         1       0       0       0
   866 ;;Total ram usage:        1 bytes
   867 ;; Hardware stack levels used:    1
   868 ;; This function calls:
   869 ;;		Nothing
   870 ;; This function is called by:
   871 ;;		_write_msg
   872 ;;		_read_msg
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           
   877                           ;psect for function _wait_while_strobe_high
   878  06B5                     _wait_while_strobe_high:	
   879  06B5                     l42:	
   880                           ;assignment4.c: 67: continue;
   881                           
   882                           ;assignment4.c: 66: while(RC4){
   883                           
   884                           ;incstack = 0
   885                           ; Regs used in _wait_while_strobe_high: [wreg]
   886                           ;assignment4.c: 65: while(1){
   887                           
   888  06B5  1283               	bcf	3,5	;RP0=0, select bank0
   889  06B6  1303               	bcf	3,6	;RP1=0, select bank0
   890  06B7  1A07               	btfsc	7,4	;volatile
   891  06B8  2EB5               	goto	l42
   892                           
   893                           ;assignment4.c: 68: }
   894                           ;assignment4.c: 69: _delay((unsigned long)((1)*(4000000/4000.0)));
   895  06B9  30F9               	movlw	249
   896  06BA  00F0               	movwf	??_wait_while_strobe_high
   897  06BB                     u247:	
   898  06BB  0000               	nop
   899  06BC  0BF0               	decfsz	??_wait_while_strobe_high,f
   900  06BD  2EBB               	goto	u247
   901  06BE  2EBF               	nop2	;nop
   902  06BF  0000               	nop
   903                           
   904                           ;assignment4.c: 70: if(!RC4){
   905  06C0  1283               	bcf	3,5	;RP0=0, select bank0
   906  06C1  1303               	bcf	3,6	;RP1=0, select bank0
   907  06C2  1E07               	btfss	7,4	;volatile
   908  06C3  0008               	return
   909  06C4  2EB5               	goto	l42
   910  06C5                     __end_of_wait_while_strobe_high:	
   911                           ;assignment4.c: 71: return;
   912                           
   913                           
   914                           	psect	text8
   915  06A5                     __ptext8:	
   916 ;; *************** function _set_read *****************
   917 ;; Defined at:
   918 ;;		line 107 in file "assignment4.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;		None
   921 ;; Auto vars:     Size  Location     Type
   922 ;;		None
   923 ;; Return value:  Size  Location     Type
   924 ;;		None               void
   925 ;; Registers used:
   926 ;;		None
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   932 ;;      Params:         0       0       0       0
   933 ;;      Locals:         0       0       0       0
   934 ;;      Temps:          0       0       0       0
   935 ;;      Totals:         0       0       0       0
   936 ;;Total ram usage:        0 bytes
   937 ;; Hardware stack levels used:    1
   938 ;; This function calls:
   939 ;;		Nothing
   940 ;; This function is called by:
   941 ;;		_write_msg
   942 ;;		_read_msg
   943 ;;		_main
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           
   948                           ;psect for function _set_read
   949  06A5                     _set_read:	
   950                           
   951                           ;assignment4.c: 109: TRISC0 = 1;
   952                           
   953                           ;incstack = 0
   954                           ; Regs used in _set_read: []
   955  06A5  1683               	bsf	3,5	;RP0=1, select bank1
   956  06A6  1303               	bcf	3,6	;RP1=0, select bank1
   957  06A7  1407               	bsf	7,0	;volatile
   958                           
   959                           ;assignment4.c: 110: TRISC1 = 1;
   960  06A8  1487               	bsf	7,1	;volatile
   961                           
   962                           ;assignment4.c: 111: TRISC2 = 1;
   963  06A9  1507               	bsf	7,2	;volatile
   964                           
   965                           ;assignment4.c: 112: TRISC3 = 1;
   966  06AA  1587               	bsf	7,3	;volatile
   967                           
   968                           ;assignment4.c: 113: TRISC4 = 1;
   969  06AB  1607               	bsf	7,4	;volatile
   970  06AC  0008               	return
   971  06AD                     __end_of_set_read:	
   972                           
   973                           	psect	text9
   974  0744                     __ptext9:	
   975 ;; *************** function _debug_write *****************
   976 ;; Defined at:
   977 ;;		line 182 in file "assignment4.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;  msg             1    wreg     unsigned char 
   980 ;; Auto vars:     Size  Location     Type
   981 ;;  msg             1    1[COMMON] unsigned char 
   982 ;;  i               2    2[COMMON] int 
   983 ;; Return value:  Size  Location     Type
   984 ;;		None               void
   985 ;; Registers used:
   986 ;;		wreg, status,2, status,0, btemp+1
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   992 ;;      Params:         0       0       0       0
   993 ;;      Locals:         3       0       0       0
   994 ;;      Temps:          1       0       0       0
   995 ;;      Totals:         4       0       0       0
   996 ;;Total ram usage:        4 bytes
   997 ;; Hardware stack levels used:    1
   998 ;; This function calls:
   999 ;;		Nothing
  1000 ;; This function is called by:
  1001 ;;		_read_msg
  1002 ;;		_main
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           
  1007                           ;psect for function _debug_write
  1008  0744                     _debug_write:	
  1009                           
  1010                           ;incstack = 0
  1011                           ; Regs used in _debug_write: [wreg+status,2+status,0+btemp+1]
  1012                           ;debug_write@msg stored from wreg
  1013  0744  00F1               	movwf	debug_write@msg
  1014                           
  1015                           ;assignment4.c: 183: for(int i = 0x01; i < 0x10; i <<= 1){
  1016  0745  3001               	movlw	1
  1017  0746  00F2               	movwf	debug_write@i
  1018  0747  3000               	movlw	0
  1019  0748  00F3               	movwf	debug_write@i+1
  1020  0749                     L3:	
  1021  0749  0873               	movf	debug_write@i+1,w
  1022  074A  3A80               	xorlw	128
  1023  074B  00FF               	movwf	127
  1024  074C  3080               	movlw	128
  1025  074D  027F               	subwf	127,w
  1026  074E  1D03               	skipz
  1027  074F  2F52               	goto	u165
  1028  0750  3010               	movlw	16
  1029  0751  0272               	subwf	debug_write@i,w
  1030  0752                     u165:	
  1031  0752  1803               	btfsc	3,0
  1032  0753  0008               	return
  1033                           
  1034                           ;assignment4.c: 184: RC5 = 0;
  1035  0754  1283               	bcf	3,5	;RP0=0, select bank0
  1036  0755  1303               	bcf	3,6	;RP1=0, select bank0
  1037  0756  1287               	bcf	7,5	;volatile
  1038                           
  1039                           ;assignment4.c: 185: _delay((unsigned long)((0.1)*(4000000/4000.0)));
  1040  0757  3021               	movlw	33
  1041  0758  00F0               	movwf	??_debug_write
  1042  0759                     u257:	
  1043  0759  0BF0               	decfsz	??_debug_write,f
  1044  075A  2F59               	goto	u257
  1045                           
  1046                           ;assignment4.c: 186: RC5 = 1;
  1047  075B  1283               	bcf	3,5	;RP0=0, select bank0
  1048  075C  1303               	bcf	3,6	;RP1=0, select bank0
  1049  075D  1687               	bsf	7,5	;volatile
  1050                           
  1051                           ;assignment4.c: 187: _delay((unsigned long)((0.1)*(4000000/4000.0)));
  1052  075E  3021               	movlw	33
  1053  075F  00F0               	movwf	??_debug_write
  1054  0760                     u267:	
  1055  0760  0BF0               	decfsz	??_debug_write,f
  1056  0761  2F60               	goto	u267
  1057                           
  1058                           ;assignment4.c: 188: RC5 = 0;
  1059  0762  1283               	bcf	3,5	;RP0=0, select bank0
  1060  0763  1303               	bcf	3,6	;RP1=0, select bank0
  1061  0764  1287               	bcf	7,5	;volatile
  1062                           
  1063                           ;assignment4.c: 189: _delay((unsigned long)((0.1)*(4000000/4000.0)));
  1064  0765  3021               	movlw	33
  1065  0766  00F0               	movwf	??_debug_write
  1066  0767                     u277:	
  1067  0767  0BF0               	decfsz	??_debug_write,f
  1068  0768  2F67               	goto	u277
  1069                           
  1070                           ;assignment4.c: 190: if(msg & i){
  1071  0769  0871               	movf	debug_write@msg,w
  1072  076A  0572               	andwf	debug_write@i,w
  1073  076B  1903               	btfsc	3,2
  1074  076C  2F71               	goto	l78
  1075                           
  1076                           ;assignment4.c: 191: RC5 = 1;
  1077  076D  1283               	bcf	3,5	;RP0=0, select bank0
  1078  076E  1303               	bcf	3,6	;RP1=0, select bank0
  1079  076F  1687               	bsf	7,5	;volatile
  1080                           
  1081                           ;assignment4.c: 192: }else{
  1082  0770  2F74               	goto	l725
  1083  0771                     l78:	
  1084                           
  1085                           ;assignment4.c: 193: RC5 = 0;
  1086  0771  1283               	bcf	3,5	;RP0=0, select bank0
  1087  0772  1303               	bcf	3,6	;RP1=0, select bank0
  1088  0773  1287               	bcf	7,5	;volatile
  1089  0774                     l725:	
  1090                           
  1091                           ;assignment4.c: 194: }
  1092                           ;assignment4.c: 195: _delay((unsigned long)((1)*(4000000/4000.0)));
  1093  0774  30F9               	movlw	249
  1094  0775  00F0               	movwf	??_debug_write
  1095  0776                     u287:	
  1096  0776  0000               	nop
  1097  0777  0BF0               	decfsz	??_debug_write,f
  1098  0778  2F76               	goto	u287
  1099  0779  2F7A               	nop2	;nop
  1100  077A  0000               	nop
  1101                           
  1102                           ;assignment4.c: 196: RC5 = 0;
  1103  077B  1283               	bcf	3,5	;RP0=0, select bank0
  1104  077C  1303               	bcf	3,6	;RP1=0, select bank0
  1105  077D  1287               	bcf	7,5	;volatile
  1106                           
  1107                           ;assignment4.c: 197: _delay((unsigned long)((0.1)*(4000000/4000.0)));
  1108  077E  3021               	movlw	33
  1109  077F  00F0               	movwf	??_debug_write
  1110  0780                     u297:	
  1111  0780  0BF0               	decfsz	??_debug_write,f
  1112  0781  2F80               	goto	u297
  1113                           
  1114                           ;assignment4.c: 198: RC5 = 1;
  1115  0782  1283               	bcf	3,5	;RP0=0, select bank0
  1116  0783  1303               	bcf	3,6	;RP1=0, select bank0
  1117  0784  1687               	bsf	7,5	;volatile
  1118                           
  1119                           ;assignment4.c: 199: _delay((unsigned long)((0.1)*(4000000/4000.0)));
  1120  0785  3021               	movlw	33
  1121  0786  00F0               	movwf	??_debug_write
  1122  0787                     u307:	
  1123  0787  0BF0               	decfsz	??_debug_write,f
  1124  0788  2F87               	goto	u307
  1125                           
  1126                           ;assignment4.c: 200: RC5 = 0;
  1127  0789  1283               	bcf	3,5	;RP0=0, select bank0
  1128  078A  1303               	bcf	3,6	;RP1=0, select bank0
  1129  078B  1287               	bcf	7,5	;volatile
  1130                           
  1131                           ;assignment4.c: 201: _delay((unsigned long)((0.1)*(4000000/4000.0)));
  1132  078C  3021               	movlw	33
  1133  078D  00F0               	movwf	??_debug_write
  1134  078E                     u317:	
  1135  078E  0BF0               	decfsz	??_debug_write,f
  1136  078F  2F8E               	goto	u317
  1137  0790  3001               	movlw	1
  1138  0791                     u185:	
  1139  0791  1003               	clrc
  1140  0792  0DF2               	rlf	debug_write@i,f
  1141  0793  0DF3               	rlf	debug_write@i+1,f
  1142  0794  3EFF               	addlw	-1
  1143  0795  1D03               	skipz
  1144  0796  2F91               	goto	u185
  1145  0797  2F49               	goto	L3
  1146  0798                     __end_of_debug_write:	
  1147                           
  1148                           	psect	text10
  1149  06D5                     __ptext10:	
  1150 ;; *************** function _init *****************
  1151 ;; Defined at:
  1152 ;;		line 90 in file "assignment4.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;		None
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;		None
  1157 ;; Return value:  Size  Location     Type
  1158 ;;		None               void
  1159 ;; Registers used:
  1160 ;;		wreg
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1166 ;;      Params:         0       0       0       0
  1167 ;;      Locals:         0       0       0       0
  1168 ;;      Temps:          0       0       0       0
  1169 ;;      Totals:         0       0       0       0
  1170 ;;Total ram usage:        0 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; This function calls:
  1173 ;;		Nothing
  1174 ;; This function is called by:
  1175 ;;		_main
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           
  1180                           ;psect for function _init
  1181  06D5                     _init:	
  1182                           
  1183                           ;assignment4.c: 93: TRISA2 = 1;
  1184                           
  1185                           ;incstack = 0
  1186                           ; Regs used in _init: [wreg]
  1187  06D5  1683               	bsf	3,5	;RP0=1, select bank1
  1188  06D6  1303               	bcf	3,6	;RP1=0, select bank1
  1189  06D7  1505               	bsf	5,2	;volatile
  1190                           
  1191                           ;assignment4.c: 94: ANSEL = 0b00001001;
  1192  06D8  3009               	movlw	9
  1193  06D9  0091               	movwf	17	;volatile
  1194                           
  1195                           ;assignment4.c: 97: ADCON0 = 0b00001001;
  1196  06DA  3009               	movlw	9
  1197  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  1198  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  1199  06DD  009F               	movwf	31	;volatile
  1200                           
  1201                           ;assignment4.c: 98: ADCON1 = 0b00010000;
  1202  06DE  3010               	movlw	16
  1203  06DF  1683               	bsf	3,5	;RP0=1, select bank1
  1204  06E0  1303               	bcf	3,6	;RP1=0, select bank1
  1205  06E1  009F               	movwf	31	;volatile
  1206                           
  1207                           ;assignment4.c: 102: TRISC5 = 0;
  1208  06E2  1287               	bcf	7,5	;volatile
  1209                           
  1210                           ;assignment4.c: 103: CMCON0 = 0x7;
  1211  06E3  3007               	movlw	7
  1212  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  1213  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  1214  06E6  0099               	movwf	25	;volatile
  1215  06E7  0008               	return
  1216  06E8                     __end_of_init:	
  1217  007E                     btemp	set	126	;btemp
  1218  007E                     wtemp	set	126
  1219  007E                     wtemp0	set	126
  1220  0080                     wtemp1	set	128
  1221  0082                     wtemp2	set	130
  1222  0084                     wtemp3	set	132
  1223  0086                     wtemp4	set	134
  1224  0088                     wtemp5	set	136
  1225  007F                     wtemp6	set	127
  1226  007E                     ttemp	set	126
  1227  007E                     ttemp0	set	126
  1228  0081                     ttemp1	set	129
  1229  0084                     ttemp2	set	132
  1230  0087                     ttemp3	set	135
  1231  007F                     ttemp4	set	127
  1232  007E                     ltemp	set	126
  1233  007E                     ltemp0	set	126
  1234  0082                     ltemp1	set	130
  1235  0086                     ltemp2	set	134
  1236  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      6       6
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_vread
    _write_msg->_wait_while_strobe_high
    _write_msg->_wait_while_strobe_low
    _read_msg->_debug_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     431
                                              7 COMMON     3     3      0
                                              0 BANK0      6     6      0
                        _debug_write
                               _init
                           _read_msg
                           _set_read
                              _vread
                          _write_msg
 ---------------------------------------------------------------------------------
 (1) _write_msg                                            1     1      0      22
                                              1 COMMON     1     1      0
                           _set_read
                          _set_write
             _wait_while_strobe_high
              _wait_while_strobe_low
 ---------------------------------------------------------------------------------
 (2) _set_write                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _vread                                                7     5      2      24
                                              0 COMMON     7     5      2
                           _read_adc
 ---------------------------------------------------------------------------------
 (2) _read_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_msg                                             2     2      0     136
                                              4 COMMON     2     2      0
                        _debug_write
                           _set_read
             _wait_while_strobe_high
              _wait_while_strobe_low
 ---------------------------------------------------------------------------------
 (2) _wait_while_strobe_low                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _wait_while_strobe_high                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _debug_write                                          4     4      0      90
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _debug_write
   _init
   _read_msg
     _debug_write
     _set_read
     _wait_while_strobe_high
     _wait_while_strobe_low
   _set_read
   _vread
     _read_adc
   _write_msg
     _set_read
     _set_write
     _wait_while_strobe_high
     _wait_while_strobe_low

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      6       6       3        7.5%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Dec 10 21:29:20 2015

                             l42 06B5                               l52 06C5                               l83 06A2  
                             l78 0771                               _GO 00F9                              l801 07A9  
                            l803 07AA                              l725 0774                              l819 07DF  
                            l793 07E3                              l799 07A6                              _RC4 003C  
                            _RC5 003D                              u215 0731                              u225 07BE  
                            u307 0787                              u317 078E                              u165 0752  
                            u237 06CB                              u247 06BB                              u185 0791  
                            u257 0759                              u267 0760                              u277 0767  
                            u287 0776                              u297 0780                             _main 0798  
                           _init 06D5                             btemp 007E                             ltemp 007E  
                           start 0000                             ttemp 007E                             wtemp 007E  
                          ?_main 0070                            ?_init 0070                    __CFG_WDTE$OFF 0000  
                          _ANSEL 0091                            _PORTC 0007                            _vread 0720  
                          ltemp0 007E                            ltemp1 0082                            ltemp2 0086  
                          ltemp3 0080                            ttemp0 007E                            ttemp1 0081  
                          ttemp2 0084                            ttemp3 0087                            ttemp4 007F  
                          status 0003                            wtemp0 007E                            wtemp1 0080  
                          wtemp2 0082                            wtemp3 0084                            wtemp4 0086  
                          wtemp5 0088                            wtemp6 007F             __size_of_debug_write 0054  
                __initialization 07FD                     __end_of_main 07FD                     __end_of_init 06E8  
                         ??_main 0077                           ??_init 0070                           _ADCON0 001F  
                         _ADCON1 009F                           _ADRESH 001E                           _ADRESL 009E  
                         _CMCON0 0019                           ?_vread 0070                           _TRISA2 042A  
                         _TRISC0 0438                           _TRISC1 0439                           _TRISC2 043A  
                         _TRISC3 043B                           _TRISC4 043C                           _TRISC5 043D  
               __end_of_read_adc 06A5                 __end_of_read_msg 0720                 __end_of_set_read 06AD  
          _wait_while_strobe_low 06C5         ??_wait_while_strobe_high 0070                      read_msg@msg 0075  
        __end_of__initialization 07FD                   __pcstackCOMMON 0070                    __end_of_vread 0744  
                        ??_vread 0072                       __pmaintext 0798               __size_of_set_write 0008  
         ?_wait_while_strobe_low 0070  __size_of_wait_while_strobe_high 0010                        ?_read_adc 0070  
                      ?_read_msg 0070               __size_of_write_msg 001A                        ?_set_read 0070  
                        __ptext1 06E8                          __ptext2 06AD                          __ptext3 0720  
                        __ptext4 069F                          __ptext5 0702                          __ptext6 06C5  
                        __ptext7 06B5                          __ptext8 06A5                          __ptext9 0744  
                        main@cmd 0020                    ??_debug_write 0070             end_of_initialization 07FD  
                     ??_read_adc 0070                       ??_read_msg 0074                __end_of_set_write 06B5  
                     ??_set_read 0070           _wait_while_strobe_high 06B5                __end_of_write_msg 0702  
                     main@chunk1 0021                       main@chunk2 0022                       main@chunk3 0023  
            __end_of_debug_write 0798                     write_msg@msg 0071              start_initialization 07FD  
        ??_wait_while_strobe_low 0070                        ___latbits 0001                    __pcstackBANK0 0020  
                    _debug_write 0744                __size_of_read_adc 0006                __size_of_read_msg 001E  
              __size_of_set_read 0008                   __size_of_vread 0024                     debug_write@i 0072  
        ?_wait_while_strobe_high 0070                        _set_write 06AD                        _write_msg 06E8  
 __end_of_wait_while_strobe_high 06C5                       ?_set_write 0070                         __ptext10 06D5  
                     ?_write_msg 0070                         _read_adc 069F                    __size_of_main 0065  
                  __size_of_init 0013                         _read_msg 0702                         _set_read 06A5  
                 debug_write@msg 0071                         main@data 0024   __size_of_wait_while_strobe_low 0010  
  __end_of_wait_while_strobe_low 06D5                        vread@rval 0075                     ?_debug_write 0070  
                    ??_set_write 0070                      ??_write_msg 0071  
